//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer SKY_COLOR_CONSTANT_BUFFER
// {
//
//   float3 sky_color_base;             // Offset:    0 Size:    12
//   float3 sky_color_dest;             // Offset:   16 Size:    12 [unused]
//   float2 cbsky_color_fpad;           // Offset:   32 Size:     8 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// sampler_states[1]                 sampler      NA          NA             s1      1 
// skybox                            texture  float4          2d            t32      1 
// SKY_COLOR_CONSTANT_BUFFER         cbuffer      NA          NA           cb11      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float       
// BEARING                  0   xyz         2     NONE   float   xyz 
// SV_RENDERTARGETARRAYINDEX     0   x           3  RTINDEX    uint       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB11[1], immediateIndexed
dcl_sampler s1, mode_default
dcl_resource_texture2d (float,float,float,float) t32
dcl_input_ps linear v2.xyz
dcl_output o0.xyzw
dcl_temps 5
dp3 r0.x, v2.xyzx, v2.xyzx
rsq r0.x, r0.x
mul r0.xyz, r0.xxxx, v2.zxyz
min r0.w, |r0.y|, |r0.x|
max r1.x, |r0.y|, |r0.x|
div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
mul r0.w, r0.w, r1.x
mul r1.x, r0.w, r0.w
mad r1.y, r1.x, l(0.020835), l(-0.085133)
mad r1.y, r1.x, r1.y, l(0.180141)
mad r1.y, r1.x, r1.y, l(-0.330299)
mad r1.x, r1.x, r1.y, l(0.999866)
mul r1.y, r0.w, r1.x
lt r1.z, |r0.y|, |r0.x|
mad r1.y, r1.y, l(-2.000000), l(1.570796)
and r1.y, r1.z, r1.y
mad r0.w, r0.w, r1.x, r1.y
lt r1.xy, r0.yzyy, -r0.yzyy
and r1.x, r1.x, l(0xc0490fdb)
add r0.w, r0.w, r1.x
min r1.x, r0.y, r0.x
max r0.x, r0.y, r0.x
lt r0.y, r1.x, -r1.x
ge r0.x, r0.x, -r0.x
and r0.x, r0.x, r0.y
movc r0.x, r0.x, -r0.w, r0.w
add r0.x, r0.x, l(3.141592)
add r0.y, -|r0.z|, l(1.000000)
sqrt r0.y, r0.y
mad r0.w, |r0.z|, l(-0.018729), l(0.074261)
mad r0.w, r0.w, |r0.z|, l(-0.212114)
mad r0.z, r0.w, |r0.z|, l(1.570729)
mul r0.w, r0.y, r0.z
mad r0.w, r0.w, l(-2.000000), l(3.141593)
and r0.w, r1.y, r0.w
mad r0.y, r0.z, r0.y, r0.w
add r0.y, -r0.y, l(3.141592)
mad r1.y, -r0.y, l(0.318310), l(1.000000)
mad r1.x, r0.x, l(0.159155), l(0.010000)
eq r0.x, cb11[0].y, l(0.000000)
if_nz r0.x
  mov r0.xyz, cb11[0].zzzz
else 
  mul r0.w, cb11[0].x, l(360.000000)
  ge r0.w, r0.w, -r0.w
  movc r1.zw, r0.wwww, l(0,0,360.000000,0.002778), l(0,0,-360.000000,-0.002778)
  mul r0.w, r1.w, cb11[0].x
  frc r0.w, r0.w
  mul r0.w, r0.w, r1.z
  mul r1.z, r0.w, l(0.016667)
  round_z r1.z, r1.z
  mad r0.w, r0.w, l(0.016667), -r1.z
  add r1.w, -cb11[0].y, l(1.000000)
  mul r2.y, r1.w, cb11[0].z
  mad r1.w, -cb11[0].y, r0.w, l(1.000000)
  mul r2.z, r1.w, cb11[0].z
  add r0.w, -r0.w, l(1.000000)
  mad r0.w, -cb11[0].y, r0.w, l(1.000000)
  mul r2.x, r0.w, cb11[0].z
  eq r3.xyzw, r1.zzzz, l(0.000000, 1.000000, 2.000000, 3.000000)
  eq r1.zw, r1.zzzz, l(0.000000, 0.000000, 4.000000, 5.000000)
  mov r2.w, cb11[0].z
  and r4.xyz, r2.wyzw, r1.wwww
  movc r4.xyz, r1.zzzz, r2.xywx, r4.xyzx
  movc r4.xyz, r3.wwww, r2.yzwy, r4.xyzx
  movc r4.xyz, r3.zzzz, r2.ywxy, r4.xyzx
  movc r3.yzw, r3.yyyy, r2.zzwy, r4.xxyz
  movc r0.xyz, r3.xxxx, r2.wxyw, r3.yzwy
endif 
sample_l_indexable(texture2d)(float,float,float,float) r1.xyz, r1.xyxx, t32.xyzw, s1, l(0.000000)
mul o0.xyz, r0.xyzx, r1.xyzx
mov o0.w, l(1.000000)
ret 
// Approximately 73 instruction slots used
