//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// Resource bind info for instance_models_buffer
// {
//
//   struct
//   {
//       
//       uint model_index;              // Offset:    0
//       float3 position;               // Offset:    4
//       float4 color;                  // Offset:   16
//
//   } $Element;                        // Offset:    0 Size:    32
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// instance_models_buffer                UAV  struct         r/w             u0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Input
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Output
cs_4_0
dcl_globalFlags refactoringAllowed | skipOptimization
dcl_uav_structured u0, 32
dcl_input vThreadID.x
dcl_temps 2
dcl_thread_group 512, 1, 1
//
// Initial variable locations:
//   vThreadID.x <- dtid.x; vThreadID.y <- dtid.y; vThreadID.z <- dtid.z
//
#line 10 "C:\General\GR4GA_NISHIOKA\MAGIC COLOR STONE\MGCNew\LightBlueEngine\HLSL\3D\3d_base_initializer_cs.hlsl"
mov r0.x, vThreadID.x  // r0.x <- index

#line 13
mov r0.x, r0.x  // r0.x <- inst_model.model_index

#line 14
mov r0.y, l(10)
udiv null, r0.y, r0.x, r0.y
utof r0.y, r0.y
mul r0.y, r0.y, l(2.000000)  // r0.y <- inst_model.position.x
mov r0.z, l(10)
udiv r0.z, null, r0.x, r0.z
utof r0.z, r0.z
mul r0.z, r0.z, l(2.000000)  // r0.z <- inst_model.position.y
mov r0.w, l(0)  // r0.w <- inst_model.position.z

#line 15
itof r1.xyzw, l(1, 1, 1, 1)  // r1.x <- inst_model.color.x; r1.y <- inst_model.color.y; r1.z <- inst_model.color.z; r1.w <- inst_model.color.w

#line 17
store_structured u0.x, r0.x, l(0), r0.x
store_structured u0.x, r0.x, l(4), r0.y
store_structured u0.x, r0.x, l(8), r0.z
store_structured u0.x, r0.x, l(12), r0.w
store_structured u0.x, r0.x, l(16), r1.x
store_structured u0.x, r0.x, l(20), r1.y
store_structured u0.x, r0.x, l(24), r1.z
store_structured u0.x, r0.x, l(28), r1.w

#line 18
ret 
// Approximately 21 instruction slots used
