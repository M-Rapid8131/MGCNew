//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer SCENE_CONSTANT_BUFFER
// {
//
//   int blur_lod;                      // Offset:    0 Size:     4 [unused]
//   int3 cbscene_ipad;                 // Offset:    4 Size:    12 [unused]
//   row_major float4x4 view;           // Offset:   16 Size:    64 [unused]
//   row_major float4x4 projection;     // Offset:   80 Size:    64 [unused]
//   float3 camera_position;            // Offset:  144 Size:    12
//   float blur_strength;               // Offset:  156 Size:     4 [unused]
//   float blur_size;                   // Offset:  160 Size:     4 [unused]
//   float post_effect_blend;           // Offset:  164 Size:     4 [unused]
//   float2 cbscene_fpad;               // Offset:  168 Size:     8 [unused]
//
// }
//
// cbuffer LIGHT_CONSTANT_BUFFER
// {
//
//   float4 ambient_color;              // Offset:    0 Size:    16 [unused]
//      = 0x3e4ccccd 0x3e4ccccd 0x3e4ccccd 0x3e4ccccd 
//   float4 directional_light_color;    // Offset:   16 Size:    16 [unused]
//      = 0x3f800000 0x3f800000 0x3f800000 0x3f800000 
//   float3 directional_light_direction;// Offset:   32 Size:    12
//      = 0x00000000 0x00000000 0x3f800000 
//   float radiance;                    // Offset:   44 Size:     4 [unused]
//      = 0x3f800000 
//   float3 directional_light_focus;    // Offset:   48 Size:    12 [unused]
//      = 0x00000000 0x00000000 0x00000000 
//   float cblight_fpad;                // Offset:   60 Size:     4 [unused]
//
// }
//
// cbuffer PRIMITIVE_CONSTANT_BUFFER
// {
//
//   row_major float4x4 world;          // Offset:    0 Size:    64 [unused]
//   int has_tangent;                   // Offset:   64 Size:     4
//   int material;                      // Offset:   68 Size:     4
//   int skin;                          // Offset:   72 Size:     4 [unused]
//   int cbprimitive_ipad;              // Offset:   76 Size:     4 [unused]
//
// }
//
// cbuffer OBJECT_COLOR_CONSTANT_BUFFER
// {
//
//   float3 object_color;               // Offset:    0 Size:    12
//   float blink_factor;                // Offset:   12 Size:     4
//   float object_disolve;              // Offset:   16 Size:     4
//   float3 cbobject_color_fpad;        // Offset:   20 Size:    12 [unused]
//
// }
//
// Resource bind info for materials
// {
//
//   struct SbMaterial
//   {
//       
//       bool double_sided;             // Offset:    0
//       int alpha_mode;                // Offset:    4
//       float alpha_cutoff;            // Offset:    8
//       float3 emissive_factor;        // Offset:   12
//       
//       struct PbrMetallicRoughness
//       {
//           
//           float4 basecolor_factor;   // Offset:   24
//           
//           struct TextureInfo
//           {
//               
//               int index;             // Offset:   40
//               int texcoord;          // Offset:   44
//               
//               struct KHRTextureTransform
//               {
//                   
//                   int texcoord;      // Offset:   48
//                   float rotation;    // Offset:   52
//                   float2 offset;     // Offset:   56
//                   float2 scale;      // Offset:   64
//
//               } khr_texture_transform;// Offset:   48
//
//           } basecolor_texture;       // Offset:   40
//           float metallic_factor;     // Offset:   72
//           float roughness_factor;    // Offset:   76
//           
//           struct TextureInfo
//           {
//               
//               int index;             // Offset:   80
//               int texcoord;          // Offset:   84
//               
//               struct KHRTextureTransform
//               {
//                   
//                   int texcoord;      // Offset:   88
//                   float rotation;    // Offset:   92
//                   float2 offset;     // Offset:   96
//                   float2 scale;      // Offset:  104
//
//               } khr_texture_transform;// Offset:   88
//
//           } metallic_roughness_texture;// Offset:   80
//
//       } pbr_metallic_roughness;      // Offset:   24
//       
//       struct NormalTextureInfo
//       {
//           
//           int index;                 // Offset:  112
//           int texcoord;              // Offset:  116
//           float scale;               // Offset:  120
//           
//           struct KHRTextureTransform
//           {
//               
//               int texcoord;          // Offset:  124
//               float rotation;        // Offset:  128
//               float2 offset;         // Offset:  132
//               float2 scale;          // Offset:  140
//
//           } khr_texture_transform;   // Offset:  124
//
//       } normal_texture;              // Offset:  112
//       
//       struct OcculusionTextureInfo
//       {
//           
//           int index;                 // Offset:  148
//           int texcoord;              // Offset:  152
//           float strength;            // Offset:  156
//           
//           struct KHRTextureTransform
//           {
//               
//               int texcoord;          // Offset:  160
//               float rotation;        // Offset:  164
//               float2 offset;         // Offset:  168
//               float2 scale;          // Offset:  176
//
//           } khr_texture_transform;   // Offset:  160
//
//       } occulusion_texture;          // Offset:  148
//       
//       struct TextureInfo
//       {
//           
//           int index;                 // Offset:  184
//           int texcoord;              // Offset:  188
//           
//           struct KHRTextureTransform
//           {
//               
//               int texcoord;          // Offset:  192
//               float rotation;        // Offset:  196
//               float2 offset;         // Offset:  200
//               float2 scale;          // Offset:  208
//
//           } khr_texture_transform;   // Offset:  192
//
//       } emissive_texture;            // Offset:  184
//       
//       struct KHRMaterialsClearcoat
//       {
//           
//           float clearcoat_factor;    // Offset:  216
//           
//           struct TextureInfo
//           {
//               
//               int index;             // Offset:  220
//               int texcoord;          // Offset:  224
//               
//               struct KHRTextureTransform
//               {
//                   
//                   int texcoord;      // Offset:  228
//                   float rotation;    // Offset:  232
//                   float2 offset;     // Offset:  236
//                   float2 scale;      // Offset:  244
//
//               } khr_texture_transform;// Offset:  228
//
//           } clearcoat_texture;       // Offset:  220
//           float clearcoat_roughness_factor;// Offset:  252
//           
//           struct TextureInfo
//           {
//               
//               int index;             // Offset:  256
//               int texcoord;          // Offset:  260
//               
//               struct KHRTextureTransform
//               {
//                   
//                   int texcoord;      // Offset:  264
//                   float rotation;    // Offset:  268
//                   float2 offset;     // Offset:  272
//                   float2 scale;      // Offset:  280
//
//               } khr_texture_transform;// Offset:  264
//
//           } clearcoat_roughness_texture;// Offset:  256
//           
//           struct NormalTextureInfo
//           {
//               
//               int index;             // Offset:  288
//               int texcoord;          // Offset:  292
//               float scale;           // Offset:  296
//               
//               struct KHRTextureTransform
//               {
//                   
//                   int texcoord;      // Offset:  300
//                   float rotation;    // Offset:  304
//                   float2 offset;     // Offset:  308
//                   float2 scale;      // Offset:  316
//
//               } khr_texture_transform;// Offset:  300
//
//           } clearcoat_normal_texture;// Offset:  288
//
//       } clearcoat;                   // Offset:  216
//       
//       struct KHRMaterialsTransmission
//       {
//           
//           float transmission_factor; // Offset:  324
//           
//           struct TextureInfo
//           {
//               
//               int index;             // Offset:  328
//               int texcoord;          // Offset:  332
//               
//               struct KHRTextureTransform
//               {
//                   
//                   int texcoord;      // Offset:  336
//                   float rotation;    // Offset:  340
//                   float2 offset;     // Offset:  344
//                   float2 scale;      // Offset:  352
//
//               } khr_texture_transform;// Offset:  336
//
//           } transmission_texture;    // Offset:  328
//
//       } transmission;                // Offset:  324
//       
//       struct KHRMaterialsEmissiveStrength
//       {
//           
//           float emissive_strength;   // Offset:  360
//
//       } emissive_strength;           // Offset:  360
//       
//       struct KHRMaterialsSpecular
//       {
//           
//           float specular_factor;     // Offset:  364
//           
//           struct TextureInfo
//           {
//               
//               int index;             // Offset:  368
//               int texcoord;          // Offset:  372
//               
//               struct KHRTextureTransform
//               {
//                   
//                   int texcoord;      // Offset:  376
//                   float rotation;    // Offset:  380
//                   float2 offset;     // Offset:  384
//                   float2 scale;      // Offset:  392
//
//               } khr_texture_transform;// Offset:  376
//
//           } specular_texture;        // Offset:  368
//           float3 specular_color_factor;// Offset:  400
//           
//           struct TextureInfo
//           {
//               
//               int index;             // Offset:  412
//               int texcoord;          // Offset:  416
//               
//               struct KHRTextureTransform
//               {
//                   
//                   int texcoord;      // Offset:  420
//                   float rotation;    // Offset:  424
//                   float2 offset;     // Offset:  428
//                   float2 scale;      // Offset:  436
//
//               } khr_texture_transform;// Offset:  420
//
//           } specular_color_texture;  // Offset:  412
//
//       } specular;                    // Offset:  364
//       
//       struct KHRMaterialsIor
//       {
//           
//           float ior;                 // Offset:  444
//
//       } ior;                         // Offset:  444
//
//   } $Element;                        // Offset:    0 Size:   448
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// sampler_states[0]                 sampler      NA          NA             s0      1 
// sampler_states[1]                 sampler      NA          NA             s1      1 
// sampler_states[2]                 sampler      NA          NA             s2      1 
// materials                         texture  struct         r/o             t0      1 
// material_textures[0]              texture  float4          2d            t16      1 
// material_textures[1]              texture  float4          2d            t17      1 
// material_textures[2]              texture  float4          2d            t18      1 
// material_textures[3]              texture  float4          2d            t19      1 
// material_textures[4]              texture  float4          2d            t20      1 
// material_textures[9]              texture  float4          2d            t25      1 
// model_mask_texture                texture  float4          2d            t30      1 
// PRIMITIVE_CONSTANT_BUFFER         cbuffer      NA          NA            cb0      1 
// OBJECT_COLOR_CONSTANT_BUFFER      cbuffer      NA          NA            cb2      1 
// SCENE_CONSTANT_BUFFER             cbuffer      NA          NA            cb9      1 
// LIGHT_CONSTANT_BUFFER             cbuffer      NA          NA           cb10      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// POSITION                 0   xyzw        1     NONE   float   xyz 
// NORMAL                   0   xyzw        2     NONE   float   xyz 
// TANGENT                  0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 0   xy          4     NONE   float   xy  
// TEXCOORD                 1   xyz         5     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed | skipOptimization
dcl_constantbuffer CB9[10], immediateIndexed
dcl_constantbuffer CB10[3], immediateIndexed
dcl_constantbuffer CB0[5], immediateIndexed
dcl_constantbuffer CB2[2], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_resource_structured t0, 448
dcl_resource_texture2d (float,float,float,float) t16
dcl_resource_texture2d (float,float,float,float) t17
dcl_resource_texture2d (float,float,float,float) t18
dcl_resource_texture2d (float,float,float,float) t19
dcl_resource_texture2d (float,float,float,float) t20
dcl_resource_texture2d (float,float,float,float) t25
dcl_resource_texture2d (float,float,float,float) t30
dcl_input_ps linear v1.xyz
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xyzw
dcl_input_ps linear v4.xy
dcl_output o0.xyzw
dcl_temps 19
//
// Initial variable locations:
//   v0.x <- pin.position.x; v0.y <- pin.position.y; v0.z <- pin.position.z; v0.w <- pin.position.w; 
//   v1.x <- pin.w_position.x; v1.y <- pin.w_position.y; v1.z <- pin.w_position.z; v1.w <- pin.w_position.w; 
//   v2.x <- pin.w_normal.x; v2.y <- pin.w_normal.y; v2.z <- pin.w_normal.z; v2.w <- pin.w_normal.w; 
//   v3.x <- pin.w_tangent.x; v3.y <- pin.w_tangent.y; v3.z <- pin.w_tangent.z; v3.w <- pin.w_tangent.w; 
//   v4.x <- pin.texcoord.x; v4.y <- pin.texcoord.y; 
//   v5.x <- pin.shadow_texcoord.x; v5.y <- pin.shadow_texcoord.y; v5.z <- pin.shadow_texcoord.z; 
//   o0.x <- <ShaderMain return value>.x; o0.y <- <ShaderMain return value>.y; o0.z <- <ShaderMain return value>.z; o0.w <- <ShaderMain return value>.w
//
#line 19 "C:\General\GR4GA_NISHIOKA\MAGIC COLOR STONE\MGCNew\LightBlueEngine\HLSL\common.hlsli"
mov r0.x, l(2.200000)  // r0.x <- GAMMA

#line 21
mov r0.y, l(3.141592)  // r0.y <- PI

#line 12 "C:\General\GR4GA_NISHIOKA\MAGIC COLOR STONE\MGCNew\LightBlueEngine\HLSL\3D\3d_base_ps.hlsl"
mov r0.z, cb0[4].y
ld_structured_indexable(structured_buffer, stride=448)(mixed,mixed,mixed,mixed) r1.x, r0.z, l(12), t0.xxxx  // r1.x <- MATERIAL.emissive_factor.x
ld_structured_indexable(structured_buffer, stride=448)(mixed,mixed,mixed,mixed) r1.y, r0.z, l(16), t0.xxxx  // r1.y <- MATERIAL.emissive_factor.y
ld_structured_indexable(structured_buffer, stride=448)(mixed,mixed,mixed,mixed) r1.z, r0.z, l(20), t0.xxxx  // r1.z <- MATERIAL.emissive_factor.z
ld_structured_indexable(structured_buffer, stride=448)(mixed,mixed,mixed,mixed) r2.x, r0.z, l(24), t0.xxxx  // r2.x <- MATERIAL.pbr_metallic_roughness.basecolor_factor.x
ld_structured_indexable(structured_buffer, stride=448)(mixed,mixed,mixed,mixed) r2.y, r0.z, l(28), t0.xxxx  // r2.y <- MATERIAL.pbr_metallic_roughness.basecolor_factor.y
ld_structured_indexable(structured_buffer, stride=448)(mixed,mixed,mixed,mixed) r2.z, r0.z, l(32), t0.xxxx  // r2.z <- MATERIAL.pbr_metallic_roughness.basecolor_factor.z
ld_structured_indexable(structured_buffer, stride=448)(mixed,mixed,mixed,mixed) r2.w, r0.z, l(36), t0.xxxx  // r2.w <- MATERIAL.pbr_metallic_roughness.basecolor_factor.w
ld_structured_indexable(structured_buffer, stride=448)(mixed,mixed,mixed,mixed) r0.w, r0.z, l(40), t0.xxxx  // r0.w <- MATERIAL.pbr_metallic_roughness.basecolor_texture.index
ld_structured_indexable(structured_buffer, stride=448)(mixed,mixed,mixed,mixed) r3.x, r0.z, l(52), t0.xxxx  // r3.x <- MATERIAL.pbr_metallic_roughness.basecolor_texture.khr_texture_transform.rotation
ld_structured_indexable(structured_buffer, stride=448)(mixed,mixed,mixed,mixed) r3.y, r0.z, l(64), t0.xxxx  // r3.y <- MATERIAL.pbr_metallic_roughness.basecolor_texture.khr_texture_transform.scale.x
ld_structured_indexable(structured_buffer, stride=448)(mixed,mixed,mixed,mixed) r3.z, r0.z, l(68), t0.xxxx  // r3.z <- MATERIAL.pbr_metallic_roughness.basecolor_texture.khr_texture_transform.scale.y
ld_structured_indexable(structured_buffer, stride=448)(mixed,mixed,mixed,mixed) r4.y, r0.z, l(72), t0.xxxx  // r4.y <- MATERIAL.pbr_metallic_roughness.metallic_factor
ld_structured_indexable(structured_buffer, stride=448)(mixed,mixed,mixed,mixed) r4.x, r0.z, l(76), t0.xxxx  // r4.x <- MATERIAL.pbr_metallic_roughness.roughness_factor
ld_structured_indexable(structured_buffer, stride=448)(mixed,mixed,mixed,mixed) r1.w, r0.z, l(80), t0.xxxx  // r1.w <- MATERIAL.pbr_metallic_roughness.metallic_roughness_texture.index
ld_structured_indexable(structured_buffer, stride=448)(mixed,mixed,mixed,mixed) r3.w, r0.z, l(112), t0.xxxx  // r3.w <- MATERIAL.normal_texture.index
ld_structured_indexable(structured_buffer, stride=448)(mixed,mixed,mixed,mixed) r5.x, r0.z, l(120), t0.xxxx  // r5.x <- MATERIAL.normal_texture.scale
ld_structured_indexable(structured_buffer, stride=448)(mixed,mixed,mixed,mixed) r6.x, r0.z, l(128), t0.xxxx  // r6.x <- MATERIAL.normal_texture.khr_texture_transform.rotation
ld_structured_indexable(structured_buffer, stride=448)(mixed,mixed,mixed,mixed) r6.y, r0.z, l(140), t0.xxxx  // r6.y <- MATERIAL.normal_texture.khr_texture_transform.scale.x
ld_structured_indexable(structured_buffer, stride=448)(mixed,mixed,mixed,mixed) r6.z, r0.z, l(144), t0.xxxx  // r6.z <- MATERIAL.normal_texture.khr_texture_transform.scale.y
ld_structured_indexable(structured_buffer, stride=448)(mixed,mixed,mixed,mixed) r4.z, r0.z, l(148), t0.xxxx  // r4.z <- MATERIAL.occulusion_texture.index
ld_structured_indexable(structured_buffer, stride=448)(mixed,mixed,mixed,mixed) r7.z, r0.z, l(156), t0.xxxx  // r7.z <- MATERIAL.occulusion_texture.strength
ld_structured_indexable(structured_buffer, stride=448)(mixed,mixed,mixed,mixed) r4.w, r0.z, l(184), t0.xxxx  // r4.w <- MATERIAL.emissive_texture.index
ld_structured_indexable(structured_buffer, stride=448)(mixed,mixed,mixed,mixed) r8.x, r0.z, l(196), t0.xxxx  // r8.x <- MATERIAL.emissive_texture.khr_texture_transform.rotation
ld_structured_indexable(structured_buffer, stride=448)(mixed,mixed,mixed,mixed) r8.y, r0.z, l(208), t0.xxxx  // r8.y <- MATERIAL.emissive_texture.khr_texture_transform.scale.x
ld_structured_indexable(structured_buffer, stride=448)(mixed,mixed,mixed,mixed) r8.z, r0.z, l(212), t0.xxxx  // r8.z <- MATERIAL.emissive_texture.khr_texture_transform.scale.y
ld_structured_indexable(structured_buffer, stride=448)(mixed,mixed,mixed,mixed) r9.x, r0.z, l(220), t0.xxxx  // r9.x <- MATERIAL.clearcoat.clearcoat_texture.index
ld_structured_indexable(structured_buffer, stride=448)(mixed,mixed,mixed,mixed) r9.y, r0.z, l(256), t0.xxxx  // r9.y <- MATERIAL.clearcoat.clearcoat_roughness_texture.index
ld_structured_indexable(structured_buffer, stride=448)(mixed,mixed,mixed,mixed) r5.y, r0.z, l(288), t0.xxxx  // r5.y <- MATERIAL.clearcoat.clearcoat_normal_texture.index
ld_structured_indexable(structured_buffer, stride=448)(mixed,mixed,mixed,mixed) r9.z, r0.z, l(328), t0.xxxx  // r9.z <- MATERIAL.transmission.transmission_texture.index
ld_structured_indexable(structured_buffer, stride=448)(mixed,mixed,mixed,mixed) r10.x, r0.z, l(360), t0.xxxx  // r10.x <- MATERIAL.emissive_strength.emissive_strength
ld_structured_indexable(structured_buffer, stride=448)(mixed,mixed,mixed,mixed) r10.y, r0.z, l(364), t0.xxxx  // r10.y <- MATERIAL.specular.specular_factor
ld_structured_indexable(structured_buffer, stride=448)(mixed,mixed,mixed,mixed) r10.z, r0.z, l(368), t0.xxxx  // r10.z <- MATERIAL.specular.specular_texture.index
ld_structured_indexable(structured_buffer, stride=448)(mixed,mixed,mixed,mixed) r11.x, r0.z, l(380), t0.xxxx  // r11.x <- MATERIAL.specular.specular_texture.khr_texture_transform.rotation
ld_structured_indexable(structured_buffer, stride=448)(mixed,mixed,mixed,mixed) r11.y, r0.z, l(392), t0.xxxx  // r11.y <- MATERIAL.specular.specular_texture.khr_texture_transform.scale.x
ld_structured_indexable(structured_buffer, stride=448)(mixed,mixed,mixed,mixed) r11.z, r0.z, l(396), t0.xxxx  // r11.z <- MATERIAL.specular.specular_texture.khr_texture_transform.scale.y
ld_structured_indexable(structured_buffer, stride=448)(mixed,mixed,mixed,mixed) r12.x, r0.z, l(400), t0.xxxx  // r12.x <- MATERIAL.specular.specular_color_factor.x
ld_structured_indexable(structured_buffer, stride=448)(mixed,mixed,mixed,mixed) r12.y, r0.z, l(404), t0.xxxx  // r12.y <- MATERIAL.specular.specular_color_factor.y
ld_structured_indexable(structured_buffer, stride=448)(mixed,mixed,mixed,mixed) r12.z, r0.z, l(408), t0.xxxx  // r12.z <- MATERIAL.specular.specular_color_factor.z
ld_structured_indexable(structured_buffer, stride=448)(mixed,mixed,mixed,mixed) r10.w, r0.z, l(412), t0.xxxx  // r10.w <- MATERIAL.specular.specular_color_texture.index
ld_structured_indexable(structured_buffer, stride=448)(mixed,mixed,mixed,mixed) r13.x, r0.z, l(424), t0.xxxx  // r13.x <- MATERIAL.specular.specular_color_texture.khr_texture_transform.rotation
ld_structured_indexable(structured_buffer, stride=448)(mixed,mixed,mixed,mixed) r13.y, r0.z, l(436), t0.xxxx  // r13.y <- MATERIAL.specular.specular_color_texture.khr_texture_transform.scale.x
ld_structured_indexable(structured_buffer, stride=448)(mixed,mixed,mixed,mixed) r13.z, r0.z, l(440), t0.xxxx  // r13.z <- MATERIAL.specular.specular_color_texture.khr_texture_transform.scale.y

#line 14
nop 
mov r2.xyzw, r2.xyzw
mov r1.xyz, r1.xyzx
mov r3.xyz, r3.xyzx
mov r8.xyz, r8.xyzx
mov r9.xyz, r9.xyzx
mov r11.xyz, r11.xyzx
mov r12.xyz, r12.xyzx
mov r13.xyz, r13.xyzx
mov r4.xy, r4.xyxx
mov r0.w, r0.w
mov r1.w, r1.w
mov r4.z, r4.z
mov r7.z, r7.z
mov r4.w, r4.w
mov r10.xyzw, r10.xyzw
mov r14.xy, v4.xyxx

#line 56 "C:\General\GR4GA_NISHIOKA\MAGIC COLOR STONE\MGCNew\LightBlueEngine\HLSL\3D\3D_utility\material_data.hlsli"
mov r15.xyz, l(0.040000,0.040000,0.040000,0)  // r15.x <- material_data.f0.x; r15.y <- material_data.f0.y; r15.z <- material_data.f0.z

#line 83
mov r16.xyzw, r2.xwyz  // r16.x <- basecolor.x; r16.y <- basecolor.w; r16.z <- basecolor.y; r16.w <- basecolor.z

#line 85
ilt r0.z, l(-1), r0.w
if_nz r0.z

#line 87
  nop 
  mov r14.xy, r14.xyxx
  mov r2.xyz, r3.xyzx

#line 18 "C:\General\GR4GA_NISHIOKA\MAGIC COLOR STONE\MGCNew\LightBlueEngine\HLSL\3D\Extension\transform.hlsli"
  mov r2.x, r2.x  // r2.x <- ROTATION

#line 19
  mov r2.yz, r2.yyzy  // r2.y <- SCALE.x; r2.z <- SCALE.y

#line 21
  sincos null, r0.z, r2.x  // r0.z <- COSINE

#line 22
  sincos r0.w, null, r2.x  // r0.w <- SINE

#line 24
  mul r17.x, r0.z, r2.y  // r17.x <- mat._m00
  mov r2.x, -r2.z
  mul r18.x, r0.w, r2.x  // r18.x <- mat._m01
  mul r17.y, r0.w, r2.y  // r17.y <- mat._m10
  mul r18.y, r0.z, r2.z  // r18.y <- mat._m11
  itof r0.zw, l(0, 0, 0, 0)  // r0.z <- mat._m20; r0.w <- mat._m21
  mov r17.z, r0.z  // r17.z <- mat._m20
  mov r18.z, r0.w  // r18.z <- mat._m21

#line 31
  itof r14.z, l(1)
  dp3 r2.x, r14.xyzx, r17.xyzx  // r2.x <- transformed_texcoord.x
  dp3 r2.y, r14.xyzx, r18.xyzx  // r2.y <- transformed_texcoord.y

#line 33
  mov r2.xy, r2.xyxx  // r2.x <- <TransformTexcoord return value>.x; r2.y <- <TransformTexcoord return value>.y

#line 87 "C:\General\GR4GA_NISHIOKA\MAGIC COLOR STONE\MGCNew\LightBlueEngine\HLSL\3D\3D_utility\material_data.hlsli"
  mov r2.xy, r2.xyxx  // r2.x <- transformed_texcoord.x; r2.y <- transformed_texcoord.y

#line 89
  sample_indexable(texture2d)(float,float,float,float) r17.xyzw, r2.xyxx, t16.xyzw, s2  // r17.x <- sampled.x; r17.y <- sampled.y; r17.z <- sampled.z; r17.w <- sampled.w

#line 90
  mov r2.xyz, -r17.xyzx
  max r2.xyz, r2.xyzx, r17.xyzx
  log r2.xyz, r2.xyzx
  mul r2.xyz, r0.xxxx, r2.xyzx
  exp r17.xyz, r2.xyzx

#line 91
  mul r16.xyzw, r16.xyzw, r17.xwyz

#line 92
endif 

#line 94
mov r16.xyzw, r16.xyzw  // r16.x <- material_data.basecolor_factor.x; r16.y <- material_data.basecolor_factor.w; r16.z <- material_data.basecolor_factor.y; r16.w <- material_data.basecolor_factor.z

#line 98
mov r4.x, r4.x  // r4.x <- roughness

#line 99
mov r4.y, r4.y  // r4.y <- metallic

#line 101
ilt r0.z, l(-1), r1.w
if_nz r0.z

#line 103
  nop 
  mov r14.xy, r14.xyxx
  mov r2.xyz, r3.xyzx

#line 18 "C:\General\GR4GA_NISHIOKA\MAGIC COLOR STONE\MGCNew\LightBlueEngine\HLSL\3D\Extension\transform.hlsli"
  mov r2.x, r2.x  // r2.x <- ROTATION

#line 19
  mov r2.yz, r2.yyzy  // r2.y <- SCALE.x; r2.z <- SCALE.y

#line 21
  sincos null, r0.z, r2.x  // r0.z <- COSINE

#line 22
  sincos r0.w, null, r2.x  // r0.w <- SINE

#line 24
  mul r17.x, r0.z, r2.y  // r17.x <- mat._m00
  mov r1.w, -r2.z
  mul r18.x, r0.w, r1.w  // r18.x <- mat._m01
  mul r17.y, r0.w, r2.y  // r17.y <- mat._m10
  mul r18.y, r0.z, r2.z  // r18.y <- mat._m11
  itof r0.zw, l(0, 0, 0, 0)  // r0.z <- mat._m20; r0.w <- mat._m21
  mov r17.z, r0.z  // r17.z <- mat._m20
  mov r18.z, r0.w  // r18.z <- mat._m21

#line 31
  itof r14.z, l(1)
  dp3 r2.x, r14.xyzx, r17.xyzx  // r2.x <- transformed_texcoord.x
  dp3 r2.y, r14.xyzx, r18.xyzx  // r2.y <- transformed_texcoord.y

#line 33
  mov r2.xy, r2.xyxx  // r2.x <- <TransformTexcoord return value>.x; r2.y <- <TransformTexcoord return value>.y

#line 103 "C:\General\GR4GA_NISHIOKA\MAGIC COLOR STONE\MGCNew\LightBlueEngine\HLSL\3D\3D_utility\material_data.hlsli"
  mov r2.xy, r2.xyxx  // r2.x <- transformed_texcoord.x; r2.y <- transformed_texcoord.y

#line 105
  sample_indexable(texture2d)(float,float,float,float) r0.zw, r2.xyxx, t17.xwyz, s2  // r0.z <- sampled.y; r0.w <- sampled.z

#line 106
  mul r4.x, r0.z, r4.x

#line 107
  mul r4.y, r0.w, r4.y

#line 108
endif 

#line 110
mov r4.x, r4.x  // r4.x <- material_data.roughness_factor

#line 111
mov r4.y, r4.y  // r4.y <- material_data.metallic_factor

#line 113
mov r2.xyz, -r15.xyzx
add r2.xyz, r2.xyzx, r16.xzwx
mul r2.xyz, r2.xyzx, r4.yyyy
add r2.xyz, r2.xyzx, r15.xyzx  // r2.x <- material_data.f0.x; r2.y <- material_data.f0.y; r2.z <- material_data.f0.z

#line 114
mov r15.xyz, l(1.000000,1.000000,1.000000,0)  // r15.x <- material_data.f90.x; r15.y <- material_data.f90.y; r15.z <- material_data.f90.z

#line 115
mul r0.z, r4.x, r4.x  // r0.z <- material_data.alpha_roughness

#line 119
mov r1.xyz, r1.xyzx  // r1.x <- emissive.x; r1.y <- emissive.y; r1.z <- emissive.z

#line 120
mov r7.x, r10.x  // r7.x <- emissive_strength

#line 122
ilt r0.w, l(-1), r4.w
if_nz r0.w

#line 124
  nop 
  mov r14.xy, r14.xyxx
  mov r8.xyz, r8.xyzx

#line 18 "C:\General\GR4GA_NISHIOKA\MAGIC COLOR STONE\MGCNew\LightBlueEngine\HLSL\3D\Extension\transform.hlsli"
  mov r8.x, r8.x  // r8.x <- ROTATION

#line 19
  mov r8.yz, r8.yyzy  // r8.y <- SCALE.x; r8.z <- SCALE.y

#line 21
  sincos null, r0.w, r8.x  // r0.w <- COSINE

#line 22
  sincos r1.w, null, r8.x  // r1.w <- SINE

#line 24
  mul r17.x, r0.w, r8.y  // r17.x <- mat._m00
  mov r4.x, -r8.z
  mul r18.x, r1.w, r4.x  // r18.x <- mat._m01
  mul r17.y, r1.w, r8.y  // r17.y <- mat._m10
  mul r18.y, r0.w, r8.z  // r18.y <- mat._m11
  itof r4.xw, l(0, 0, 0, 0)  // r4.x <- mat._m20; r4.w <- mat._m21
  mov r17.z, r4.x  // r17.z <- mat._m20
  mov r18.z, r4.w  // r18.z <- mat._m21

#line 31
  itof r14.z, l(1)
  dp3 r8.x, r14.xyzx, r17.xyzx  // r8.x <- transformed_texcoord.x
  dp3 r8.y, r14.xyzx, r18.xyzx  // r8.y <- transformed_texcoord.y

#line 33
  mov r8.xy, r8.xyxx  // r8.x <- <TransformTexcoord return value>.x; r8.y <- <TransformTexcoord return value>.y

#line 124 "C:\General\GR4GA_NISHIOKA\MAGIC COLOR STONE\MGCNew\LightBlueEngine\HLSL\3D\3D_utility\material_data.hlsli"
  mov r8.xy, r8.xyxx  // r8.x <- transformed_texcoord.x; r8.y <- transformed_texcoord.y

#line 126
  sample_indexable(texture2d)(float,float,float,float) r8.xyzw, r8.xyxx, t19.xyzw, s2  // r8.x <- sampled.x; r8.y <- sampled.y; r8.z <- sampled.z; r8.w <- sampled.w

#line 127
  mov r17.xyz, -r8.xyzx
  max r8.xyz, r8.xyzx, r17.xyzx
  log r8.xyz, r8.xyzx
  mul r8.xyz, r0.xxxx, r8.xyzx
  exp r1.xyz, r8.xyzx  // r1.x <- sampled.x; r1.y <- sampled.y; r1.z <- sampled.z

#line 128
  mov r1.xyz, r1.xyzx  // r1.x <- emissive.x; r1.y <- emissive.y; r1.z <- emissive.z

#line 129
  mov r7.x, r8.w

#line 130
endif 

#line 132
mov r1.xyz, r1.xyzx  // r1.x <- material_data.emissive_factor.x; r1.y <- material_data.emissive_factor.y; r1.z <- material_data.emissive_factor.z

#line 133
mov r7.x, r7.x  // r7.x <- material_data.emissive_strength

#line 136
mov r7.y, l(1.000000)  // r7.y <- occulusion

#line 138
ilt r0.x, l(-1), r4.z
if_nz r0.x

#line 140
  nop 
  mov r14.xy, r14.xyxx
  mov r3.xyz, r3.xyzx

#line 18 "C:\General\GR4GA_NISHIOKA\MAGIC COLOR STONE\MGCNew\LightBlueEngine\HLSL\3D\Extension\transform.hlsli"
  mov r3.x, r3.x  // r3.x <- ROTATION

#line 19
  mov r3.yz, r3.yyzy  // r3.y <- SCALE.x; r3.z <- SCALE.y

#line 21
  sincos null, r0.x, r3.x  // r0.x <- COSINE

#line 22
  sincos r0.w, null, r3.x  // r0.w <- SINE

#line 24
  mul r8.x, r0.x, r3.y  // r8.x <- mat._m00
  mov r1.w, -r3.z
  mul r17.x, r0.w, r1.w  // r17.x <- mat._m01
  mul r8.y, r0.w, r3.y  // r8.y <- mat._m10
  mul r17.y, r0.x, r3.z  // r17.y <- mat._m11
  itof r0.xw, l(0, 0, 0, 0)  // r0.x <- mat._m20; r0.w <- mat._m21
  mov r8.z, r0.x  // r8.z <- mat._m20
  mov r17.z, r0.w  // r17.z <- mat._m21

#line 31
  itof r14.z, l(1)
  dp3 r3.x, r14.xyzx, r8.xyzx  // r3.x <- transformed_texcoord.x
  dp3 r3.y, r14.xyzx, r17.xyzx  // r3.y <- transformed_texcoord.y

#line 33
  mov r3.xy, r3.xyxx  // r3.x <- <TransformTexcoord return value>.x; r3.y <- <TransformTexcoord return value>.y

#line 140 "C:\General\GR4GA_NISHIOKA\MAGIC COLOR STONE\MGCNew\LightBlueEngine\HLSL\3D\3D_utility\material_data.hlsli"
  mov r3.xy, r3.xyxx  // r3.x <- transformed_texcoord.x; r3.y <- transformed_texcoord.y

#line 142
  sample_indexable(texture2d)(float,float,float,float) r0.x, r3.xyxx, t20.xyzw, s2  // r0.x <- sampled.x

#line 143
  mul r7.y, r0.x, r7.y

#line 144
endif 

#line 146
mov r7.y, r7.y  // r7.y <- material_data.occulusion_factor

#line 147
mov r7.z, r7.z  // r7.z <- material_data.occulusion_strength

#line 152
ilt r0.x, l(-1), r9.x
if_nz r0.x

#line 154
  nop 

#line 158
endif 

#line 165
ilt r0.x, l(-1), r9.y
if_nz r0.x

#line 167
  nop 

#line 171
endif 

#line 181
ilt r0.x, l(-1), r9.z
if_nz r0.x

#line 183
  nop 

#line 187
endif 

#line 193
mov r12.xyz, r12.xyzx  // r12.x <- specular_color.x; r12.y <- specular_color.y; r12.z <- specular_color.z

#line 194
mov r7.w, r10.y  // r7.w <- specular

#line 196
ilt r0.x, l(-1), r10.z
if_nz r0.x

#line 198
  nop 
  mov r14.xy, r14.xyxx
  mov r13.xyz, r13.xyzx

#line 18 "C:\General\GR4GA_NISHIOKA\MAGIC COLOR STONE\MGCNew\LightBlueEngine\HLSL\3D\Extension\transform.hlsli"
  mov r13.x, r13.x  // r13.x <- ROTATION

#line 19
  mov r13.yz, r13.yyzy  // r13.y <- SCALE.x; r13.z <- SCALE.y

#line 21
  sincos null, r0.x, r13.x  // r0.x <- COSINE

#line 22
  sincos r0.w, null, r13.x  // r0.w <- SINE

#line 24
  mul r3.x, r0.x, r13.y  // r3.x <- mat._m00
  mov r1.w, -r13.z
  mul r8.x, r0.w, r1.w  // r8.x <- mat._m01
  mul r3.y, r0.w, r13.y  // r3.y <- mat._m10
  mul r8.y, r0.x, r13.z  // r8.y <- mat._m11
  itof r0.xw, l(0, 0, 0, 0)  // r0.x <- mat._m20; r0.w <- mat._m21
  mov r3.z, r0.x  // r3.z <- mat._m20
  mov r8.z, r0.w  // r8.z <- mat._m21

#line 31
  itof r14.z, l(1)
  dp3 r3.x, r14.xyzx, r3.xyzx  // r3.x <- transformed_texcoord.x
  dp3 r3.y, r14.xyzx, r8.xyzx  // r3.y <- transformed_texcoord.y

#line 33
  mov r3.xy, r3.xyxx  // r3.x <- <TransformTexcoord return value>.x; r3.y <- <TransformTexcoord return value>.y

#line 198 "C:\General\GR4GA_NISHIOKA\MAGIC COLOR STONE\MGCNew\LightBlueEngine\HLSL\3D\3D_utility\material_data.hlsli"
  mov r3.xy, r3.xyxx  // r3.x <- transformed_texcoord.x; r3.y <- transformed_texcoord.y

#line 200
  sample_indexable(texture2d)(float,float,float,float) r0.x, r3.xyxx, t25.wxyz, s1  // r0.x <- sampled.w

#line 201
  mul r7.w, r0.x, r7.w

#line 202
endif 

#line 204
ilt r0.x, l(-1), r10.w
if_nz r0.x

#line 206
  nop 
  mov r14.xy, r14.xyxx
  mov r11.xyz, r11.xyzx

#line 18 "C:\General\GR4GA_NISHIOKA\MAGIC COLOR STONE\MGCNew\LightBlueEngine\HLSL\3D\Extension\transform.hlsli"
  mov r11.x, r11.x  // r11.x <- ROTATION

#line 19
  mov r11.yz, r11.yyzy  // r11.y <- SCALE.x; r11.z <- SCALE.y

#line 21
  sincos null, r0.x, r11.x  // r0.x <- COSINE

#line 22
  sincos r0.w, null, r11.x  // r0.w <- SINE

#line 24
  mul r3.x, r0.x, r11.y  // r3.x <- mat._m00
  mov r1.w, -r11.z
  mul r8.x, r0.w, r1.w  // r8.x <- mat._m01
  mul r3.y, r0.w, r11.y  // r3.y <- mat._m10
  mul r8.y, r0.x, r11.z  // r8.y <- mat._m11
  itof r0.xw, l(0, 0, 0, 0)  // r0.x <- mat._m20; r0.w <- mat._m21
  mov r3.z, r0.x  // r3.z <- mat._m20
  mov r8.z, r0.w  // r8.z <- mat._m21

#line 31
  itof r14.z, l(1)
  dp3 r3.x, r14.xyzx, r3.xyzx  // r3.x <- transformed_texcoord.x
  dp3 r3.y, r14.xyzx, r8.xyzx  // r3.y <- transformed_texcoord.y

#line 33
  mov r3.xy, r3.xyxx  // r3.x <- <TransformTexcoord return value>.x; r3.y <- <TransformTexcoord return value>.y

#line 206 "C:\General\GR4GA_NISHIOKA\MAGIC COLOR STONE\MGCNew\LightBlueEngine\HLSL\3D\3D_utility\material_data.hlsli"
  mov r3.xy, r3.xyxx  // r3.x <- transformed_texcoord.x; r3.y <- transformed_texcoord.y

#line 208
  sample_indexable(texture2d)(float,float,float,float) r3.xyz, r3.xyxx, t25.xyzw, s1  // r3.x <- sampled.x; r3.y <- sampled.y; r3.z <- sampled.z

#line 209
  mul r12.xyz, r3.xyzx, r12.xyzx

#line 210
endif 

#line 212
mov r12.xyz, r12.xyzx  // r12.x <- material_data.specular_color_factor.x; r12.y <- material_data.specular_color_factor.y; r12.z <- material_data.specular_color_factor.z

#line 214
mul r2.xyz, r2.xyzx, r12.xyzx
min r2.xyz, r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)  // r2.x <- dielectric_specular_f0.x; r2.y <- dielectric_specular_f0.y; r2.z <- dielectric_specular_f0.z

#line 215
mov r3.xyz, -r2.xyzx
add r3.xyz, r3.xyzx, r16.xzwx
mul r3.xyz, r3.xyzx, r4.yyyy
add r2.xyz, r2.xyzx, r3.xyzx  // r2.x <- material_data.f0.x; r2.y <- material_data.f0.y; r2.z <- material_data.f0.z

#line 216
mov r7.w, r7.w  // r7.w <- material_data.specular_factor

#line 217
itof r3.xyz, l(0, 0, 0, 0)
mov r4.xzw, -r16.xxzw
add r3.xyz, r3.xyzx, r4.xzwx
mul r3.xyz, r3.xyzx, r4.yyyy
add r3.xyz, r3.xyzx, r16.xzwx  // r3.x <- material_data.c_diff.x; r3.y <- material_data.c_diff.y; r3.z <- material_data.c_diff.z

#line 219
mov r7.x, r7.x  // r7.x <- <GetMaterialData return value>.emissive_strength
mov r7.y, r7.y  // r7.y <- <GetMaterialData return value>.occulusion_factor
mov r7.z, r7.z  // r7.z <- <GetMaterialData return value>.occulusion_strength
mov r7.w, r7.w  // r7.w <- <GetMaterialData return value>.specular_factor
mov r2.xyz, r2.xyzx  // r2.x <- <GetMaterialData return value>.f0.x; r2.y <- <GetMaterialData return value>.f0.y; r2.z <- <GetMaterialData return value>.f0.z
mov r15.xyz, r15.xyzx  // r15.x <- <GetMaterialData return value>.f90.x; r15.y <- <GetMaterialData return value>.f90.y; r15.z <- <GetMaterialData return value>.f90.z
mov r3.xyz, r3.xyzx  // r3.x <- <GetMaterialData return value>.c_diff.x; r3.y <- <GetMaterialData return value>.c_diff.y; r3.z <- <GetMaterialData return value>.c_diff.z
mov r1.xyz, r1.xyzx  // r1.x <- <GetMaterialData return value>.emissive_factor.x; r1.y <- <GetMaterialData return value>.emissive_factor.y; r1.z <- <GetMaterialData return value>.emissive_factor.z
mov r12.xyz, r12.xyzx  // r12.x <- <GetMaterialData return value>.specular_color_factor.x; r12.y <- <GetMaterialData return value>.specular_color_factor.y; r12.z <- <GetMaterialData return value>.specular_color_factor.z
mov r16.x, r0.z  // r16.x <- <GetMaterialData return value>.alpha_roughness
mov r16.y, r16.y  // r16.y <- <GetMaterialData return value>.basecolor_factor.w

#line 14 "C:\General\GR4GA_NISHIOKA\MAGIC COLOR STONE\MGCNew\LightBlueEngine\HLSL\3D\3d_base_ps.hlsl"
mov r7.xyzw, r7.xyzw  // r7.x <- material_data.emissive_strength; r7.y <- material_data.occulusion_factor; r7.z <- material_data.occulusion_strength; r7.w <- material_data.specular_factor
mov r2.xyz, r2.xyzx  // r2.x <- material_data.f0.x; r2.y <- material_data.f0.y; r2.z <- material_data.f0.z
mov r15.xyz, r15.xyzx  // r15.x <- material_data.f90.x; r15.y <- material_data.f90.y; r15.z <- material_data.f90.z
mov r3.xyz, r3.xyzx  // r3.x <- material_data.c_diff.x; r3.y <- material_data.c_diff.y; r3.z <- material_data.c_diff.z
mov r1.xyz, r1.xyzx  // r1.x <- material_data.emissive_factor.x; r1.y <- material_data.emissive_factor.y; r1.z <- material_data.emissive_factor.z
mov r12.xyz, r12.xyzx  // r12.x <- material_data.specular_color_factor.x; r12.y <- material_data.specular_color_factor.y; r12.z <- material_data.specular_color_factor.z
mov r16.xy, r16.xyxx  // r16.x <- material_data.alpha_roughness; r16.y <- material_data.basecolor_factor.w

#line 18
mov r0.xzw, -v1.xxyz
add r0.xzw, r0.xxzw, cb9[9].xxyz
dp3 r1.w, r0.xzwx, r0.xzwx
rsq r1.w, r1.w
mul r0.xzw, r0.xxzw, r1.wwww  // r0.x <- view_vec.x; r0.z <- view_vec.y; r0.w <- view_vec.z

#line 19
dp3 r1.w, cb10[2].xyzx, cb10[2].xyzx
rsq r1.w, r1.w
mul r4.xyz, r1.wwww, cb10[2].xyzx  // r4.x <- light_vec.x; r4.y <- light_vec.y; r4.z <- light_vec.z

#line 20
dp3 r1.w, v2.xyzx, v2.xyzx
rsq r1.w, r1.w
mul r8.xyz, r1.wwww, v2.xyzx  // r8.x <- norm_vec.x; r8.y <- norm_vec.y; r8.z <- norm_vec.z

#line 21
ine r9.xyz, l(0, 0, 0, 0), cb0[4].xxxx
dp3 r1.w, v3.xyzx, v3.xyzx
rsq r1.w, r1.w
mul r10.xyz, r1.wwww, v3.xyzx
itof r11.xyz, l(1, 0, 0, 0)
movc r9.xyz, r9.xyzx, r10.xyzx, r11.xyzx  // r9.x <- tangent.x; r9.y <- tangent.y; r9.z <- tangent.z

#line 22
ine r1.w, l(0, 0, 0, 0), cb0[4].x
movc r1.w, r1.w, v3.w, l(1.000000)  // r1.w <- sigma

#line 24
dp3 r4.w, r8.xyzx, r9.xyzx
mul r10.xyz, r4.wwww, r8.xyzx
mov r10.xyz, -r10.xyzx
add r9.xyz, r9.xyzx, r10.xyzx
dp3 r4.w, r9.xyzx, r9.xyzx
rsq r4.w, r4.w
mul r9.xyz, r4.wwww, r9.xyzx  // r9.x <- tangent.x; r9.y <- tangent.y; r9.z <- tangent.z

#line 26
mul r10.xyz, r8.yzxy, r9.zxyz
mul r11.xyz, r8.zxyz, r9.yzxy
mov r11.xyz, -r11.xyzx
add r10.xyz, r10.xyzx, r11.xyzx
mul r10.xyz, r1.wwww, r10.xyzx
dp3 r1.w, r10.xyzx, r10.xyzx
rsq r1.w, r1.w
mul r10.xyz, r1.wwww, r10.xyzx  // r10.x <- bitangent.x; r10.y <- bitangent.y; r10.z <- bitangent.z

#line 29
ilt r1.w, l(-1), r3.w
if_nz r1.w

#line 31
  nop 
  mov r11.xy, v4.xyxx
  mov r6.xyz, r6.xyzx

#line 18 "C:\General\GR4GA_NISHIOKA\MAGIC COLOR STONE\MGCNew\LightBlueEngine\HLSL\3D\Extension\transform.hlsli"
  mov r6.x, r6.x  // r6.x <- ROTATION

#line 19
  mov r6.yz, r6.yyzy  // r6.y <- SCALE.x; r6.z <- SCALE.y

#line 21
  sincos null, r1.w, r6.x  // r1.w <- COSINE

#line 22
  sincos r3.w, null, r6.x  // r3.w <- SINE

#line 24
  mul r13.x, r1.w, r6.y  // r13.x <- mat._m00
  mov r4.w, -r6.z
  mul r14.x, r3.w, r4.w  // r14.x <- mat._m01
  mul r13.y, r3.w, r6.y  // r13.y <- mat._m10
  mul r14.y, r1.w, r6.z  // r14.y <- mat._m11
  itof r6.xy, l(0, 0, 0, 0)  // r6.x <- mat._m20; r6.y <- mat._m21
  mov r13.z, r6.x  // r13.z <- mat._m20
  mov r14.z, r6.y  // r14.z <- mat._m21

#line 31
  itof r11.z, l(1)
  dp3 r6.x, r11.xyzx, r13.xyzx  // r6.x <- transformed_texcoord.x
  dp3 r6.y, r11.xyzx, r14.xyzx  // r6.y <- transformed_texcoord.y

#line 33
  mov r6.xy, r6.xyxx  // r6.x <- <TransformTexcoord return value>.x; r6.y <- <TransformTexcoord return value>.y

#line 31 "C:\General\GR4GA_NISHIOKA\MAGIC COLOR STONE\MGCNew\LightBlueEngine\HLSL\3D\3d_base_ps.hlsl"
  mov r6.xy, r6.xyxx  // r6.x <- transformed_texcoord.x; r6.y <- transformed_texcoord.y

#line 32
  sample_indexable(texture2d)(float,float,float,float) r6.xyz, r6.xyxx, t18.xyzw, s1
  mov r6.xyz, r6.xyzx  // r6.x <- normal.x; r6.y <- normal.y; r6.z <- normal.z

#line 33
  mul r6.xyz, r6.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000)
  mov r11.xyz, l(-1.000000,-1.000000,-1.000000,-0.000000)
  add r6.xyz, r6.xyzx, r11.xyzx

#line 34
  mov r5.z, l(1.000000)
  mul r5.xzw, r5.xxxz, r6.xxyz
  dp3 r1.w, r5.xzwx, r5.xzwx
  rsq r1.w, r1.w
  mul r5.xzw, r1.wwww, r5.xxzw  // r5.x <- normal.x; r5.z <- normal.y; r5.w <- normal.z

#line 35
  mul r6.xyz, r9.xyzx, r5.xxxx
  mul r9.xyz, r10.xyzx, r5.zzzz
  add r6.xyz, r6.xyzx, r9.xyzx
  mul r5.xzw, r8.xxyz, r5.wwww
  add r5.xzw, r5.xxzw, r6.xxyz
  dp3 r1.w, r5.xzwx, r5.xzwx
  rsq r1.w, r1.w
  mul r8.xyz, r1.wwww, r5.xzwx

#line 36
endif 

#line 39
ilt r1.w, l(-1), r5.y
if_nz r1.w

#line 41
  nop 

#line 46
endif 

#line 48
nop 
mov r2.xyz, r2.xyzx
mov r15.xyz, r15.xyzx
mov r3.xyz, r3.xyzx
mov r1.xyz, r1.xyzx
mov r12.xyz, r12.xyzx
mov r16.x, r16.x
mov r16.y, r16.y
mov r7.xyzw, r7.xyzw
mov r4.xyz, r4.xyzx
mov r0.xzw, r0.xxzw
mov r8.xyz, r8.xyzx
mov r5.xyz, cb2[0].xyzx

#line 13 "C:\General\GR4GA_NISHIOKA\MAGIC COLOR STONE\MGCNew\LightBlueEngine\HLSL\3D\3D_utility\physically_based_rendering.hlsli"
itof r6.xyz, l(0, 0, 0, 0)  // r6.x <- diffuse.x; r6.y <- diffuse.y; r6.z <- diffuse.z

#line 14
itof r9.xyz, l(0, 0, 0, 0)  // r9.x <- specular.x; r9.y <- specular.y; r9.z <- specular.z

#line 18
dp3 r1.w, r8.xyzx, r4.xyzx
max r1.w, r1.w, l(0.000000)  // r1.w <- NoL

#line 19
dp3 r3.w, r8.xyzx, r0.xzwx
max r3.w, r3.w, l(0.000000)  // r3.w <- NoV

#line 22
add r10.xyz, r4.xyzx, r0.xzwx
dp3 r4.w, r10.xyzx, r10.xyzx
rsq r4.w, r4.w
mul r10.xyz, r4.wwww, r10.xyzx  // r10.x <- half_vec.x; r10.y <- half_vec.y; r10.z <- half_vec.z

#line 24
lt r4.w, l(0.000000), r1.w
lt r5.w, l(0.000000), r3.w
or r4.w, r4.w, r5.w
if_nz r4.w

#line 26
  dp3 r4.w, r8.xyzx, r10.xyzx
  max r4.w, r4.w, l(0.000000)  // r4.w <- NoH

#line 27
  dp3 r5.w, r10.xyzx, r0.xzwx
  max r5.w, r5.w, l(0.000000)  // r5.w <- HoV

#line 30
  nop 
  mov r8.xyz, r2.xyzx
  mov r10.xyz, r15.xyzx
  mov r3.xyz, r3.xyzx
  mov r5.w, r5.w

#line 62 "C:\General\GR4GA_NISHIOKA\MAGIC COLOR STONE\MGCNew\LightBlueEngine\HLSL\3D\3D_utility\brdf.hlsli"
  nop 
  mov r8.xyz, r8.xyzx
  mov r10.xyz, r10.xyzx
  mov r5.w, r5.w

#line 20
  mov r11.xyz, -r8.xyzx
  add r10.xyz, r10.xyzx, r11.xyzx
  mov r6.w, -r5.w
  add r6.w, r6.w, l(1.000000)
  itof r8.w, l(0)
  max r6.w, r6.w, r8.w
  min r6.w, r6.w, l(1.000000)
  mov r8.w, l(1.000000)
  mul r8.w, r6.w, r8.w
  mul r6.w, r6.w, r6.w
  mul r6.w, r6.w, r6.w
  mul r6.w, r6.w, r8.w
  mul r10.xyz, r6.wwww, r10.xyzx
  add r8.xyz, r8.xyzx, r10.xyzx  // r8.x <- <Fresnel return value>.x; r8.y <- <Fresnel return value>.y; r8.z <- <Fresnel return value>.z

#line 62
  mov r8.xyz, -r8.xyzx
  add r8.xyz, r8.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  div r3.xyz, r3.xyzx, r0.yyyy
  mul r3.xyz, r3.xyzx, r8.xyzx  // r3.x <- <CalcBRDFLambertian return value>.x; r3.y <- <CalcBRDFLambertian return value>.y; r3.z <- <CalcBRDFLambertian return value>.z

#line 30 "C:\General\GR4GA_NISHIOKA\MAGIC COLOR STONE\MGCNew\LightBlueEngine\HLSL\3D\3D_utility\physically_based_rendering.hlsli"
  mul r3.xyz, r1.wwww, r3.xyzx
  add r6.xyz, r3.xyzx, r6.xyzx

#line 31
  nop 
  mov r2.xyz, r2.xyzx
  mov r15.xyz, r15.xyzx
  mov r16.x, r16.x
  mov r5.w, r5.w
  mov r3.x, r1.w
  mov r3.w, r3.w
  mov r4.w, r4.w
  mov r4.xyz, r4.xyzx
  mov r0.xzw, r0.xxzw

#line 68 "C:\General\GR4GA_NISHIOKA\MAGIC COLOR STONE\MGCNew\LightBlueEngine\HLSL\3D\3D_utility\brdf.hlsli"
  add r8.xyz, r0.xzwx, r4.xyzx
  dp3 r3.y, r8.xyzx, r8.xyzx
  rsq r3.y, r3.y
  mul r8.xyz, r3.yyyy, r8.xyzx  // r8.x <- half_vec.x; r8.y <- half_vec.y; r8.z <- half_vec.z

#line 69
  dp3 r3.y, r8.xyzx, r4.xyzx  // r3.y <- HoL

#line 70
  dp3 r0.x, r8.xyzx, r0.xzwx  // r0.x <- HoV

#line 71
  nop 
  mov r2.xyz, r2.xyzx
  mov r15.xyz, r15.xyzx
  mov r5.w, r5.w

#line 20
  mov r4.xyz, -r2.xyzx
  add r4.xyz, r4.xyzx, r15.xyzx
  mov r0.z, -r5.w
  add r0.z, r0.z, l(1.000000)
  itof r0.w, l(0)
  max r0.z, r0.w, r0.z
  min r0.z, r0.z, l(1.000000)
  mov r0.w, l(1.000000)
  mul r0.w, r0.z, r0.w
  mul r0.z, r0.z, r0.z
  mul r0.z, r0.z, r0.z
  mul r0.z, r0.z, r0.w
  mul r4.xyz, r0.zzzz, r4.xyzx
  add r2.xyz, r2.xyzx, r4.xyzx  // r2.x <- <Fresnel return value>.x; r2.y <- <Fresnel return value>.y; r2.z <- <Fresnel return value>.z

#line 71
  mov r2.xyz, r2.xyzx  // r2.x <- fresnel.x; r2.y <- fresnel.y; r2.z <- fresnel.z

#line 72
  nop 
  mov r3.x, r3.x
  mov r3.w, r3.w
  mov r3.y, r3.y
  mov r0.x, r0.x
  mov r16.x, r16.x

#line 38
  mul r0.z, r16.x, r16.x  // r0.z <- alpha_roughness_sq

#line 40
  mul r0.w, r3.w, r3.w
  mov r3.z, -r0.z
  add r3.z, r3.z, l(1.000000)
  mul r0.w, r0.w, r3.z
  add r0.w, r0.z, r0.w
  sqrt r0.w, r0.w
  mul r0.w, r0.w, r3.x  // r0.w <- ggxv

#line 41
  mul r3.x, r3.x, r3.x
  mov r3.z, -r0.z
  add r3.z, r3.z, l(1.000000)
  mul r3.x, r3.z, r3.x
  add r0.z, r0.z, r3.x
  sqrt r0.z, r0.z
  mul r0.z, r0.z, r3.w  // r0.z <- ggxl

#line 43
  mul r0.z, r0.z, r0.w  // r0.z <- ggx_denom

#line 44
  mul r0.x, r0.x, r3.y  // r0.x <- ggx_numer

#line 45
  lt r0.w, l(0.000000), r0.z
  div r0.x, r0.x, r0.z
  movc r0.x, r0.w, r0.x, l(0)  // r0.x <- <CalcGGXV return value>

#line 72
  mov r0.x, r0.x  // r0.x <- ggx_v

#line 73
  nop 
  mov r4.w, r4.w
  mov r16.x, r16.x

#line 53
  mul r0.z, r16.x, r16.x  // r0.z <- alpha_roughness_sq

#line 56
  mul r0.w, r4.w, r4.w
  mov r3.x, l(-1.000000)
  add r3.x, r0.z, r3.x
  mul r0.w, r0.w, r3.x
  add r0.w, r0.w, l(1.000000)  // r0.w <- f

#line 57
  add r0.z, r4.w, r0.z
  mul r0.y, r0.w, r0.y
  mul r0.y, r0.w, r0.y
  div r0.y, r0.z, r0.y  // r0.y <- <CalcGGXD return value>

#line 73
  mov r0.y, r0.y  // r0.y <- ggx_d

#line 75
  mul r0.xzw, r0.xxxx, r2.xxyz
  mul r0.xyz, r0.yyyy, r0.xzwx  // r0.x <- <CalcBRDFSpecularGGX return value>.x; r0.y <- <CalcBRDFSpecularGGX return value>.y; r0.z <- <CalcBRDFSpecularGGX return value>.z

#line 31 "C:\General\GR4GA_NISHIOKA\MAGIC COLOR STONE\MGCNew\LightBlueEngine\HLSL\3D\3D_utility\physically_based_rendering.hlsli"
  mul r0.xyz, r0.xyzx, r1.wwww
  add r9.xyz, r0.xyzx, r9.xyzx

#line 37
  nop 

#line 71 "C:\General\GR4GA_NISHIOKA\MAGIC COLOR STONE\MGCNew\LightBlueEngine\HLSL\3D\3D_utility\brdf.hlsli"
  nop 

#line 72
  nop 

#line 73
  nop 

#line 40 "C:\General\GR4GA_NISHIOKA\MAGIC COLOR STONE\MGCNew\LightBlueEngine\HLSL\3D\3D_utility\physically_based_rendering.hlsli"
endif 

#line 42
mul r0.xyz, r7.wwww, r12.xyzx
add r0.xyz, r0.xyzx, r9.xyzx
mul r0.xyz, r0.xyzx, r9.xyzx  // r0.x <- specular.x; r0.y <- specular.y; r0.z <- specular.z

#line 45
mov r1.xyz, r1.xyzx  // r1.x <- emissive_factor.x; r1.y <- emissive_factor.y; r1.z <- emissive_factor.z

#line 48
mul r1.xyz, r7.xxxx, r1.xyzx  // r1.x <- emissive.x; r1.y <- emissive.y; r1.z <- emissive.z

#line 51
mul r2.xyz, r7.yyyy, r6.xyzx
mov r3.xyz, -r6.xyzx
add r2.xyz, r2.xyzx, r3.xyzx
mul r2.xyz, r2.xyzx, r7.zzzz
add r2.xyz, r2.xyzx, r6.xyzx
add r2.xyz, r2.xyzx, r6.xyzx  // r2.x <- diffuse.x; r2.y <- diffuse.y; r2.z <- diffuse.z

#line 52
mul r3.xyz, r7.yyyy, r0.xyzx
mov r4.xyz, -r0.xyzx
add r3.xyz, r3.xyzx, r4.xyzx
mul r3.xyz, r3.xyzx, r7.zzzz
add r3.xyz, r0.xyzx, r3.xyzx
add r0.xyz, r0.xyzx, r3.xyzx

#line 57
nop 

#line 61
add r0.xyz, r0.xyzx, r2.xyzx
add r0.xyz, r1.xyzx, r0.xyzx
mul r16.xzw, r5.xxyz, r0.xxyz  // r16.x <- color.x; r16.z <- color.y; r16.w <- color.z

#line 64
mov r16.xzw, r16.xxzw  // r16.x <- <CalcPBR return value>.x; r16.z <- <CalcPBR return value>.y; r16.w <- <CalcPBR return value>.z
mov r16.y, r16.y  // r16.y <- <CalcPBR return value>.w

#line 48 "C:\General\GR4GA_NISHIOKA\MAGIC COLOR STONE\MGCNew\LightBlueEngine\HLSL\3D\3d_base_ps.hlsl"
mov r16.xyzw, r16.xyzw  // r16.x <- color.x; r16.y <- color.w; r16.z <- color.y; r16.w <- color.z

#line 49
lt r0.x, r16.y, l(0.010000)
if_nz r0.x

#line 50
  discard_nz l(-1)
endif 

#line 53
mov r0.xyz, cb2[0].xyzx
mov r0.w, r16.y
mul r0.xyzw, r0.xyzw, cb2[0].wwww
add r0.xyzw, r0.xyzw, r16.xzwy  // r0.x <- color.x; r0.y <- color.y; r0.z <- color.z; r0.w <- color.w

#line 55
sample_indexable(texture2d)(float,float,float,float) r1.x, v4.xyxx, t30.xyzw, s0
mov r1.x, r1.x  // r1.x <- disolve_mask

#line 56
ge r1.x, cb2[1].x, r1.x
movc r1.x, r1.x, l(1.000000), l(0)
mul r1.x, r2.w, r1.x
mul r0.w, r0.w, r1.x

#line 58
mov o0.xyz, r0.xyzx
mov o0.w, r0.w
ret 
// Approximately 554 instruction slots used
