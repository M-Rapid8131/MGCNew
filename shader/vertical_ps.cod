//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// sampler_states[3]                 sampler      NA          NA             s3      1 
// color_buffer_texture              texture  float4          2d             t0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// COLOR                    0   xyzw        1     NONE   float       
// TEXCOORD                 0   xy          2     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed | skipOptimization
dcl_sampler s3, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_input_ps linear v2.xy
dcl_output o0.xyzw
dcl_temps 5
dcl_indexableTemp x0[3], 4
dcl_indexableTemp x1[3], 4
//
// Initial variable locations:
//   v0.x <- pin.position.x; v0.y <- pin.position.y; v0.z <- pin.position.z; v0.w <- pin.position.w; 
//   v1.x <- pin.color.x; v1.y <- pin.color.y; v1.z <- pin.color.z; v1.w <- pin.color.w; 
//   v2.x <- pin.texcoord.x; v2.y <- pin.texcoord.y; 
//   o0.x <- <ShaderMain return value>.x; o0.y <- <ShaderMain return value>.y; o0.z <- <ShaderMain return value>.z; o0.w <- <ShaderMain return value>.w; 
//   x0 <- OFFSET[1]; x1 <- WEIGHT
//
#line 8 "C:\General\GR4GA_NISHIOKA\MAGIC COLOR STONE\MGCNew\LightBlueEngine\HLSL\2D\bloom\vertical_ps.hlsl"
mov r0.x, l(0)  // r0.x <- mip_level

#line 9
resinfo_indexable(texture2d)(float,float,float,float)_uint r0.x, r0.x, t0.xyzw
mov r0.x, r0.x  // r0.x <- width

#line 12
mov x0[1].x, l(1.384615)
mov x0[2].x, l(3.230769)

#line 13
mov x1[0].x, l(0.227027)
mov x1[1].x, l(0.316216)
mov x1[2].x, l(0.070270)

#line 15
sample_indexable(texture2d)(float,float,float,float) r1.xyzw, v2.xyxx, t0.xyzw, s3
mov r0.y, x1[0].x
mul r1.xyzw, r0.yyyy, r1.xyzw  // r1.x <- color.x; r1.y <- color.y; r1.z <- color.z; r1.w <- color.w

#line 17
mov r0.y, l(1)  // r0.y <- i
mov r2.xyzw, r1.xyzw  // r2.x <- color.x; r2.y <- color.y; r2.z <- color.z; r2.w <- color.w
mov r0.z, r0.y  // r0.z <- i
loop 
  ilt r0.w, r0.z, l(3)
  breakc_z r0.w

#line 19
  mov r0.w, x0[r0.z + 0].x
  utof r3.x, r0.x
  div r3.y, r0.w, r3.x
  mov r3.x, l(0)
  add r3.xy, r3.xyxx, v2.xyxx
  sample_indexable(texture2d)(float,float,float,float) r3.xyzw, r3.xyxx, t0.xyzw, s3
  mov r0.w, x1[r0.z + 0].x
  mul r3.xyzw, r0.wwww, r3.xyzw
  add r3.xyzw, r2.xyzw, r3.xyzw  // r3.x <- color.x; r3.y <- color.y; r3.z <- color.z; r3.w <- color.w

#line 20
  mov r0.w, x0[r0.z + 0].x
  utof r4.x, r0.x
  div r4.y, r0.w, r4.x
  mov r4.x, l(0)
  mov r4.xy, -r4.xyxx
  add r4.xy, r4.xyxx, v2.xyxx
  sample_indexable(texture2d)(float,float,float,float) r4.xyzw, r4.xyxx, t0.xyzw, s3
  mov r0.w, x1[r0.z + 0].x
  mul r4.xyzw, r0.wwww, r4.xyzw
  add r2.xyzw, r3.xyzw, r4.xyzw  // r2.x <- color.x; r2.y <- color.y; r2.z <- color.z; r2.w <- color.w

#line 21
  iadd r0.z, r0.z, l(1)
endloop 

#line 23
mov o0.xyzw, r2.xyzw
ret 
// Approximately 40 instruction slots used
