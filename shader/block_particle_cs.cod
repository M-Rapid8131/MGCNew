//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer SCENE_CONSTANT_BUFFER
// {
//
//   int blur_lod;                      // Offset:    0 Size:     4 [unused]
//   int3 cbscene_ipad;                 // Offset:    4 Size:    12 [unused]
//   row_major float4x4 view;           // Offset:   16 Size:    64 [unused]
//   row_major float4x4 projection;     // Offset:   80 Size:    64 [unused]
//   float3 camera_position;            // Offset:  144 Size:    12
//   float blur_strength;               // Offset:  156 Size:     4 [unused]
//   float blur_size;                   // Offset:  160 Size:     4 [unused]
//   float3 cbscene_fpad;               // Offset:  164 Size:    12 [unused]
//
// }
//
// cbuffer PARTICLE_CONSTANT_BUFFER
// {
//
//   uint group_count;                  // Offset:    0 Size:     4 [unused]
//   uint noise_gap;                    // Offset:    4 Size:     4 [unused]
//   uint2 cbparticle_ipad;             // Offset:    8 Size:     8 [unused]
//   float delta_time;                  // Offset:   16 Size:     4
//   float accel_attenuation;           // Offset:   20 Size:     4 [unused]
//   float2 cbparticle_fpad;            // Offset:   24 Size:     8 [unused]
//
// }
//
// cbuffer PARTICLE_EMITTER_CONSTANT_BUFFER
// {
//
//   uint emit_amounts;                 // Offset:    0 Size:     4
//   uint3 cbparticle_emitter_ipad;     // Offset:    4 Size:    12 [unused]
//   float4 emit_position;              // Offset:   16 Size:    16 [unused]
//   float4 emit_amplitude;             // Offset:   32 Size:    16 [unused]
//   float4 emit_direction;             // Offset:   48 Size:    16 [unused]
//   float4 emit_color;                 // Offset:   64 Size:    16 [unused]
//   float spread_rate;                 // Offset:   80 Size:     4 [unused]
//   float emit_size;                   // Offset:   84 Size:     4 [unused]
//   float emit_speed;                  // Offset:   88 Size:     4 [unused]
//   float emit_accel;                  // Offset:   92 Size:     4 [unused]
//   float life_time;                   // Offset:   96 Size:     4 [unused]
//   float start_diff;                  // Offset:  100 Size:     4 [unused]
//
// }
//
// Resource bind info for particle_buffer
// {
//
//   struct Particle
//   {
//       
//       uint particle_index;           // Offset:    0
//       float3 position;               // Offset:    4
//       float size;                    // Offset:   16
//       float4 color;                  // Offset:   20
//       float3 velocity;               // Offset:   36
//       float3 normal;                 // Offset:   48
//       float3 acceleration;           // Offset:   60
//       float life;                    // Offset:   72
//       float start_time;              // Offset:   76
//
//   } $Element;                        // Offset:    0 Size:    80
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// particle_buffer                       UAV  struct         r/w             u0      1 
// PARTICLE_CONSTANT_BUFFER          cbuffer      NA          NA            cb4      1 
// PARTICLE_EMITTER_CONSTANT_BUFFER    cbuffer      NA          NA            cb5      1 
// SCENE_CONSTANT_BUFFER             cbuffer      NA          NA            cb9      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Input
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Output
cs_5_0
dcl_globalFlags refactoringAllowed | skipOptimization
dcl_constantbuffer CB9[10], immediateIndexed
dcl_constantbuffer CB4[2], immediateIndexed
dcl_constantbuffer CB5[1], immediateIndexed
dcl_uav_structured u0, 80
dcl_input vThreadID.x
dcl_temps 7
dcl_thread_group 512, 1, 1
//
// Initial variable locations:
//   vThreadID.x <- dtid.x; vThreadID.y <- dtid.y; vThreadID.z <- dtid.z
//
#line 12 "C:\General\GR4GA_NISHIOKA\MAGIC COLOR STONE\MGCNew\LightBlueEngine\HLSL\Particle\particle_header.hlsli"
mov r0.x, l(10.000000)  // r0.x <- MAX_SPEED

#line 69 "C:\General\GR4GA_NISHIOKA\MAGIC COLOR STONE\MGCNew\LightBlueEngine\HLSL\Particle\block_particle_cs.hlsl"
mov r0.y, vThreadID.x  // r0.y <- index

#line 71
nop 

#line 73
uge r0.z, cb5[0].x, r0.y
if_nz r0.z

#line 75
  ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r0.z, r0.y, l(0), u0.xxxx  // r0.z <- particle.particle_index
  ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r1.x, r0.y, l(4), u0.xxxx
  ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r1.y, r0.y, l(8), u0.xxxx
  ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r1.z, r0.y, l(12), u0.xxxx
  ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r0.w, r0.y, l(16), u0.xxxx  // r0.w <- particle.size
  ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r1.w, r0.y, l(20), u0.xxxx  // r1.w <- particle.color.x
  ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r2.x, r0.y, l(24), u0.xxxx  // r2.x <- particle.color.y
  ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r2.y, r0.y, l(28), u0.xxxx  // r2.y <- particle.color.z
  ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r2.z, r0.y, l(32), u0.xxxx  // r2.z <- particle.color.w
  ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r3.x, r0.y, l(36), u0.xxxx
  ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r3.y, r0.y, l(40), u0.xxxx
  ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r3.z, r0.y, l(44), u0.xxxx
  ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r2.w, r0.y, l(72), u0.xxxx
  ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r3.w, r0.y, l(76), u0.xxxx  // r3.w <- particle.start_time
  mov r1.x, r1.x  // r1.x <- particle.position.x
  mov r1.y, r1.y  // r1.y <- particle.position.y
  mov r1.z, r1.z  // r1.z <- particle.position.z
  mov r3.x, r3.x  // r3.x <- particle.velocity.x
  mov r3.y, r3.y  // r3.y <- particle.velocity.y
  mov r3.z, r3.z  // r3.z <- particle.velocity.z
  mov r2.w, r2.w  // r2.w <- particle.life

#line 76
  mov r4.x, -cb4[1].x
  add r2.w, r2.w, r4.x

#line 77
  mov r4.xyz, -r1.xyzx
  add r4.xyz, r4.xyzx, cb9[9].xyzx
  dp3 r4.w, r4.xyzx, r4.xyzx
  rsq r4.w, r4.w
  mul r4.xyz, r4.wwww, r4.xyzx  // r4.x <- particle.normal.x; r4.y <- particle.normal.y; r4.z <- particle.normal.z

#line 79
  lt r4.w, l(0.000000), r0.w
  if_nz r4.w

#line 80
    mul r4.w, cb4[1].x, l(0.300000)
    mov r4.w, -r4.w
    add r0.w, r0.w, r4.w
  endif 

#line 82
  dp3 r4.w, r4.xyzx, r4.xyzx
  rsq r4.w, r4.w
  mul r5.xyz, r4.wwww, r4.yzxy  // r5.x <- particle.acceleration.y; r5.y <- particle.acceleration.z; r5.z <- particle.acceleration.x

#line 85
  mul r6.xyz, r5.zxyz, cb4[1].xxxx
  mul r6.xyz, r6.xyzx, l(3.000000, 3.000000, 3.000000, 0.000000)
  add r6.xyz, r3.xyzx, r6.xyzx  // r6.x <- particle.velocity.x; r6.y <- particle.velocity.y; r6.z <- particle.velocity.z

#line 86
  mul r3.xyz, r6.xyzx, cb4[1].xxxx
  add r1.xyz, r1.xyzx, r3.xyzx

#line 88
  dp3 r3.x, r6.xyzx, r6.xyzx
  sqrt r3.x, r3.x
  lt r3.x, r0.x, r3.x
  if_nz r3.x

#line 90
    mov r5.xyz, l(0,0,0,0)

#line 91
    dp3 r3.x, r6.xyzx, r6.xyzx
    rsq r3.x, r3.x
    mul r3.xyz, r3.xxxx, r6.xyzx
    mul r6.xyz, r0.xxxx, r3.xyzx

#line 92
    mov r6.w, r5.z
    mov r6.xyzw, r6.xyzw  // r6.w <- particle.acceleration.x
  else   // Prior locations: r5.z <- particle.acceleration.x
    mov r6.w, r5.z
    mov r6.xyzw, r6.xyzw  // r6.w <- particle.acceleration.x
  endif 

#line 93
  store_structured u0.x, r0.y, l(0), r0.z
  store_structured u0.x, r0.y, l(4), r1.x
  store_structured u0.x, r0.y, l(8), r1.y
  store_structured u0.x, r0.y, l(12), r1.z
  store_structured u0.x, r0.y, l(16), r0.w
  store_structured u0.x, r0.y, l(20), r1.w
  store_structured u0.x, r0.y, l(24), r2.x
  store_structured u0.x, r0.y, l(28), r2.y
  store_structured u0.x, r0.y, l(32), r2.z
  store_structured u0.x, r0.y, l(36), r6.x
  store_structured u0.x, r0.y, l(40), r6.y
  store_structured u0.x, r0.y, l(44), r6.z
  store_structured u0.x, r0.y, l(48), r4.x
  store_structured u0.x, r0.y, l(52), r4.y
  store_structured u0.x, r0.y, l(56), r4.z
  store_structured u0.x, r0.y, l(60), r6.w
  store_structured u0.x, r0.y, l(64), r5.x
  store_structured u0.x, r0.y, l(68), r5.y
  store_structured u0.x, r0.y, l(72), r2.w
  store_structured u0.x, r0.y, l(76), r3.w

#line 94
endif 

#line 95
ret 
// Approximately 84 instruction slots used
