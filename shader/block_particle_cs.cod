//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer SCENE_CONSTANT_BUFFER
// {
//
//   int blur_lod;                      // Offset:    0 Size:     4 [unused]
//   int3 cbscene_ipad;                 // Offset:    4 Size:    12 [unused]
//   row_major float4x4 view;           // Offset:   16 Size:    64 [unused]
//   row_major float4x4 projection;     // Offset:   80 Size:    64 [unused]
//   float3 camera_position;            // Offset:  144 Size:    12
//   float blur_strength;               // Offset:  156 Size:     4 [unused]
//   float blur_size;                   // Offset:  160 Size:     4 [unused]
//   float post_effect_blend;           // Offset:  164 Size:     4 [unused]
//   float2 cbscene_fpad;               // Offset:  168 Size:     8 [unused]
//
// }
//
// cbuffer PARTICLE_CONSTANT_BUFFER
// {
//
//   uint group_count;                  // Offset:    0 Size:     4 [unused]
//   uint noise_gap;                    // Offset:    4 Size:     4
//   uint2 cbparticle_ipad;             // Offset:    8 Size:     8 [unused]
//   float delta_time;                  // Offset:   16 Size:     4
//   float accel_attenuation;           // Offset:   20 Size:     4 [unused]
//   float2 cbparticle_fpad;            // Offset:   24 Size:     8 [unused]
//
// }
//
// cbuffer PARTICLE_EMITTER_CONSTANT_BUFFER
// {
//
//   uint emit_amounts;                 // Offset:    0 Size:     4
//   uint random_color;                 // Offset:    4 Size:     4 [unused]
//   uint disable;                      // Offset:    8 Size:     4 [unused]
//   uint cbparticle_emitter_ipad;      // Offset:   12 Size:     4 [unused]
//   float3 emit_position;              // Offset:   16 Size:    12 [unused]
//   float emit_speed;                  // Offset:   28 Size:     4 [unused]
//   float3 emit_force;                 // Offset:   32 Size:    12 [unused]
//   float emit_accel;                  // Offset:   44 Size:     4 [unused]
//   float3 emit_direction;             // Offset:   48 Size:    12 [unused]
//   float spread_rate;                 // Offset:   60 Size:     4 [unused]
//   float4 emit_color;                 // Offset:   64 Size:    16 [unused]
//   float emit_size;                   // Offset:   80 Size:     4 [unused]
//   float life_time;                   // Offset:   84 Size:     4 [unused]
//   float start_diff;                  // Offset:   88 Size:     4 [unused]
//   float emit_radius;                 // Offset:   92 Size:     4 [unused]
//
// }
//
// Resource bind info for particle_buffer
// {
//
//   struct Particle
//   {
//       
//       uint particle_index;           // Offset:    0
//       float3 position;               // Offset:    4
//       float size;                    // Offset:   16
//       float4 color;                  // Offset:   20
//       float3 velocity;               // Offset:   36
//       float3 acceleration;           // Offset:   48
//       float3 normal;                 // Offset:   60
//       float life;                    // Offset:   72
//       float start_time;              // Offset:   76
//
//   } $Element;                        // Offset:    0 Size:    80
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// noise_texture                     texture  float4          2d            t41      1 
// particle_buffer                       UAV  struct         r/w             u0      1 
// PARTICLE_CONSTANT_BUFFER          cbuffer      NA          NA            cb4      1 
// PARTICLE_EMITTER_CONSTANT_BUFFER    cbuffer      NA          NA            cb5      1 
// SCENE_CONSTANT_BUFFER             cbuffer      NA          NA            cb9      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Input
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Output
cs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB9[10], immediateIndexed
dcl_constantbuffer CB4[2], immediateIndexed
dcl_constantbuffer CB5[1], immediateIndexed
dcl_resource_texture2d (float,float,float,float) t41
dcl_uav_structured u0, 80
dcl_input vThreadID.x
dcl_temps 6
dcl_thread_group 512, 1, 1
ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r0.xyzw, vThreadID.x, l(4), u0.wxyz
ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r1.xyzw, vThreadID.x, l(36), u0.xyzw
ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r2.xy, vThreadID.x, l(52), u0.xyxx
ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r2.z, vThreadID.x, l(72), u0.xxxx
ult r2.w, vThreadID.x, cb5[0].x
if_nz r2.w
  lt r2.w, r2.z, l(0.000000)
  if_nz r2.w
    store_structured u0.x, vThreadID.x, l(16), l(0)
    store_structured u0.x, vThreadID.x, l(72), l(0)
    ret 
  endif 
  iadd r2.w, vThreadID.x, cb4[0].y
  resinfo_indexable(texture2d)(float,float,float,float)_uint r3.xy, l(1), t41.xyzw
  udiv r3.x, r4.x, r2.w, r3.x
  udiv null, r4.y, r3.x, r3.y
  mov r4.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r3.xyz, r4.xyzw, t41.xyzw
  add r4.w, r2.z, -cb4[1].x
  add r5.xyz, -r0.yzwy, cb9[9].xyzx
  dp3 r2.z, r5.xyzx, r5.xyzx
  rsq r2.z, r2.z
  mul r4.xyz, r2.zzzz, r5.xyzx
  lt r2.z, l(0.000000), r0.x
  mad r0.x, -cb4[1].x, l(0.300000), r0.x
  and r5.w, r0.x, r2.z
  mad r3.xyz, r3.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r4.xyzx
  add r3.xyz, r3.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
  mad r1.xyz, r3.xyzx, cb4[1].xxxx, r1.xyzx
  mad r5.xyz, r1.xyzx, cb4[1].xxxx, r0.yzwy
  dp3 r0.x, r1.xyzx, r1.xyzx
  sqrt r0.y, r0.x
  lt r0.y, l(10.000000), r0.y
  rsq r0.x, r0.x
  mul r0.xzw, r0.xxxx, r1.xxyz
  mul r3.xyz, r0.xzwx, l(10.000000, 10.000000, 10.000000, 0.000000)
  mov r3.w, l(0)
  movc r1.xyzw, r0.yyyy, r3.xyzw, r1.xyzw
  movc r0.xy, r0.yyyy, l(0,0,0,0), r2.xyxx
  store_structured u0.xyzw, vThreadID.x, l(4), r5.xyzw
  store_structured u0.xyzw, vThreadID.x, l(36), r1.xyzw
  mov r0.zw, r4.xxxy
  store_structured u0.xyzw, vThreadID.x, l(52), r0.xyzw
  store_structured u0.xy, vThreadID.x, l(68), r4.zwzz
else 
  store_structured u0.xyzw, vThreadID.x, l(16), l(0,0,0,0)
  store_structured u0.x, vThreadID.x, l(32), l(0)
endif 
ret 
// Approximately 49 instruction slots used
