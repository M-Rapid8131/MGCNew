//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer SKY_COLOR_CONSTANT_BUFFER
// {
//
//   float3 sky_color_base;             // Offset:    0 Size:    12
//   float3 sky_color_dest;             // Offset:   16 Size:    12 [unused]
//   float2 cbsky_color_fpad;           // Offset:   32 Size:     8 [unused]
//
// }
//
// cbuffer SKYMAP_CONSTANT_BUFFER
// {
//
//   row_major float4x4 inv_view_projection;// Offset:    0 Size:    64
//   int lod;                           // Offset:   64 Size:     4
//   int3 cbskymap_ipad;                // Offset:   68 Size:    12 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// sampler_states[1]                 sampler      NA          NA             s1      1 
// skycube                           texture  float4        cube            t32      1 
// SKYMAP_CONSTANT_BUFFER            cbuffer      NA          NA            cb0      1 
// SKY_COLOR_CONSTANT_BUFFER         cbuffer      NA          NA           cb11      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed | skipOptimization
dcl_constantbuffer CB11[1], immediateIndexed
dcl_constantbuffer CB0[5], immediateIndexed
dcl_sampler s1, mode_default
dcl_resource_texturecube (float,float,float,float) t32
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_temps 4
//
// Initial variable locations:
//   v0.x <- pin.position.x; v0.y <- pin.position.y; v0.z <- pin.position.z; v0.w <- pin.position.w; 
//   v1.x <- pin.texcoord.x; v1.y <- pin.texcoord.y; 
//   o0.x <- <ShaderMain return value>.x; o0.y <- <ShaderMain return value>.y; o0.z <- <ShaderMain return value>.z; o0.w <- <ShaderMain return value>.w
//
#line 11 "C:\General\GR4GA_NISHIOKA\MAGIC COLOR STONE\MGCNew\LightBlueEngine\HLSL\Skymap\skybox_ps.hlsl"
mul r0.x, v1.x, l(2.000000)
mov r0.y, l(-1.000000)
add r0.x, r0.y, r0.x  // r0.x <- ndc.x

#line 12
mul r0.y, v1.y, l(2.000000)
mov r0.y, -r0.y
add r0.y, r0.y, l(1.000000)  // r0.y <- ndc.y

#line 13
itof r0.z, l(1)  // r0.z <- ndc.z

#line 14
itof r0.w, l(1)  // r0.w <- ndc.w

#line 16
mul r1.xyzw, r0.xxxx, cb0[0].xyzw
mul r2.xyzw, r0.yyyy, cb0[1].xyzw
add r1.xyzw, r1.xyzw, r2.xyzw
mul r2.xyzw, r0.zzzz, cb0[2].xyzw
add r1.xyzw, r1.xyzw, r2.xyzw
mul r0.xyzw, r0.wwww, cb0[3].xyzw
add r0.xyzw, r0.xyzw, r1.xyzw  // r0.x <- r.x; r0.y <- r.y; r0.z <- r.z; r0.w <- r.w

#line 17
div r0.xyz, r0.xyzx, r0.wwww

#line 19
nop 
mov r1.xyz, cb11[0].zxyz

#line 42 "C:\General\GR4GA_NISHIOKA\MAGIC COLOR STONE\MGCNew\LightBlueEngine\HLSL\filter_functions.hlsli"
itof r2.xyz, l(0, 0, 0, 0)  // r2.x <- rgb.x; r2.y <- rgb.y; r2.z <- rgb.z

#line 43
itof r0.w, l(0)
eq r0.w, r0.w, r1.z
if_nz r0.w

#line 45
  mov r2.z, r1.x
  mov r2.y, r2.z
  mov r2.x, r2.y

#line 46
else 

#line 49
  mov r1.x, r1.x  // r1.x <- Vmax

#line 52
  itof r0.w, l(360)
  mul r1.w, r0.w, r1.y
  mov r2.w, -r1.w
  ge r1.w, r1.w, r2.w
  mov r2.w, -r0.w
  movc r0.w, r1.w, r0.w, r2.w
  div r1.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
  mul r1.y, r1.w, r1.y
  frc r1.y, r1.y
  mul r0.w, r0.w, r1.y  // r0.w <- hsv.x

#line 53
  itof r1.y, l(60)
  div r1.y, r0.w, r1.y
  ftoi r1.y, r1.y
  itof r1.y, r1.y  // r1.y <- Huei

#line 54
  itof r1.w, l(60)
  div r0.w, r0.w, r1.w
  mov r1.w, -r1.y
  add r0.w, r0.w, r1.w  // r0.w <- Huef

#line 55
  mov r1.w, -r1.z
  add r1.w, r1.w, l(1.000000)
  mul r1.w, r1.w, r1.x  // r1.w <- p

#line 56
  mul r2.w, r0.w, r1.z
  mov r2.w, -r2.w
  add r2.w, r2.w, l(1.000000)
  mul r2.w, r1.x, r2.w  // r2.w <- q

#line 57
  itof r3.x, l(1)
  mov r0.w, -r0.w
  add r0.w, r0.w, r3.x
  mul r0.w, r0.w, r1.z
  mov r0.w, -r0.w
  add r0.w, r0.w, l(1.000000)
  mul r0.w, r0.w, r1.x  // r0.w <- t

#line 59
  itof r1.z, l(0)
  eq r1.z, r1.z, r1.y
  if_nz r1.z

#line 61
    mov r2.x, r1.x

#line 62
    mov r2.y, r0.w

#line 63
    mov r2.z, r1.w

#line 64
  else 

#line 65
    itof r1.z, l(1)
    eq r1.z, r1.z, r1.y
    if_nz r1.z

#line 67
      mov r2.x, r2.w

#line 68
      mov r2.y, r1.x

#line 69
      mov r2.z, r1.w

#line 70
    else 

#line 71
      itof r1.z, l(2)
      eq r1.z, r1.z, r1.y
      if_nz r1.z

#line 73
        mov r2.x, r1.w

#line 74
        mov r2.y, r1.x

#line 75
        mov r2.z, r0.w

#line 76
      else 

#line 77
        itof r1.z, l(3)
        eq r1.z, r1.z, r1.y
        if_nz r1.z

#line 79
          mov r2.x, r1.w

#line 80
          mov r2.y, r2.w

#line 81
          mov r2.z, r1.x

#line 82
        else 

#line 83
          itof r1.z, l(4)
          eq r1.z, r1.z, r1.y
          if_nz r1.z

#line 85
            mov r2.x, r0.w

#line 86
            mov r2.y, r1.w

#line 87
            mov r2.z, r1.x

#line 88
          else 

#line 89
            itof r0.w, l(5)
            eq r0.w, r0.w, r1.y
            if_nz r0.w

#line 91
              mov r2.x, r1.x

#line 92
              mov r2.y, r1.w

#line 93
              mov r2.z, r2.w

#line 94
            endif 
          endif 
        endif 
      endif 
    endif 
  endif 

#line 95
endif 

#line 96
mov r2.xyz, r2.xyzx  // r2.x <- <HSV2RGB return value>.x; r2.y <- <HSV2RGB return value>.y; r2.z <- <HSV2RGB return value>.z

#line 19 "C:\General\GR4GA_NISHIOKA\MAGIC COLOR STONE\MGCNew\LightBlueEngine\HLSL\Skymap\skybox_ps.hlsl"
mov r2.xyz, r2.xyzx  // r2.x <- back_color.x; r2.y <- back_color.y; r2.z <- back_color.z

#line 21
itof r0.w, cb0[4].x
sample_l_indexable(texturecube)(float,float,float,float) r0.xyz, r0.xyzx, t32.xyzw, s1, r0.w
mul o0.xyz, r2.xyzx, r0.xyzx
mov o0.w, l(1.000000)
ret 
// Approximately 114 instruction slots used
