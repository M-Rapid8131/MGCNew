//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer SKY_COLOR_CONSTANT_BUFFER
// {
//
//   float3 sky_color_base;             // Offset:    0 Size:    12
//   float3 sky_color_dest;             // Offset:   16 Size:    12 [unused]
//   float2 cbsky_color_fpad;           // Offset:   32 Size:     8 [unused]
//
// }
//
// cbuffer SKYMAP_CONSTANT_BUFFER
// {
//
//   row_major float4x4 inv_view_projection;// Offset:    0 Size:    64
//   int lod;                           // Offset:   64 Size:     4
//   int3 cbskymap_ipad;                // Offset:   68 Size:    12 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// sampler_states[1]                 sampler      NA          NA             s1      1 
// skycube                           texture  float4        cube            t32      1 
// SKYMAP_CONSTANT_BUFFER            cbuffer      NA          NA            cb0      1 
// SKY_COLOR_CONSTANT_BUFFER         cbuffer      NA          NA           cb11      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB11[1], immediateIndexed
dcl_constantbuffer CB0[5], immediateIndexed
dcl_sampler s1, mode_default
dcl_resource_texturecube (float,float,float,float) t32
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_temps 5
mad r0.x, v1.x, l(2.000000), l(-1.000000)
mad r0.y, -v1.y, l(2.000000), l(1.000000)
mul r1.xyzw, r0.yyyy, cb0[1].xyzw
mad r0.xyzw, r0.xxxx, cb0[0].xyzw, r1.xyzw
add r0.xyzw, r0.xyzw, cb0[2].xyzw
add r0.xyzw, r0.xyzw, cb0[3].xyzw
div r0.xyz, r0.xyzx, r0.wwww
eq r0.w, cb11[0].y, l(0.000000)
if_nz r0.w
  mov r1.xyz, cb11[0].zzzz
else 
  mul r0.w, cb11[0].x, l(360.000000)
  ge r0.w, r0.w, -r0.w
  movc r2.xy, r0.wwww, l(360.000000,0.002778,0,0), l(-360.000000,-0.002778,0,0)
  mul r0.w, r2.y, cb11[0].x
  frc r0.w, r0.w
  mul r0.w, r0.w, r2.x
  mul r1.w, r0.w, l(0.016667)
  round_z r1.w, r1.w
  mad r0.w, r0.w, l(0.016667), -r1.w
  add r2.x, -cb11[0].y, l(1.000000)
  mul r2.y, r2.x, cb11[0].z
  mad r3.x, -cb11[0].y, r0.w, l(1.000000)
  mul r2.z, r3.x, cb11[0].z
  add r0.w, -r0.w, l(1.000000)
  mad r0.w, -cb11[0].y, r0.w, l(1.000000)
  mul r2.x, r0.w, cb11[0].z
  eq r3.xyzw, r1.wwww, l(0.000000, 1.000000, 2.000000, 3.000000)
  eq r4.xy, r1.wwww, l(4.000000, 5.000000, 0.000000, 0.000000)
  mov r2.w, cb11[0].z
  and r4.yzw, r2.wwyz, r4.yyyy
  movc r4.xyz, r4.xxxx, r2.xywx, r4.yzwy
  movc r4.xyz, r3.wwww, r2.yzwy, r4.xyzx
  movc r4.xyz, r3.zzzz, r2.ywxy, r4.xyzx
  movc r3.yzw, r3.yyyy, r2.zzwy, r4.xxyz
  movc r1.xyz, r3.xxxx, r2.wxyw, r3.yzwy
endif 
itof r0.w, cb0[4].x
sample_l_indexable(texturecube)(float,float,float,float) r0.xyz, r0.xyzx, t32.xyzw, s1, r0.w
mul o0.xyz, r1.xyzx, r0.xyzx
mov o0.w, l(1.000000)
ret 
// Approximately 42 instruction slots used
