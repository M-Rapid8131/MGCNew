//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer SCENE_CONSTANT_BUFFER
// {
//
//   int blur_lod;                      // Offset:    0 Size:     4 [unused]
//   int3 cbscene_ipad;                 // Offset:    4 Size:    12 [unused]
//   row_major float4x4 view;           // Offset:   16 Size:    64 [unused]
//   row_major float4x4 projection;     // Offset:   80 Size:    64 [unused]
//   float3 camera_position;            // Offset:  144 Size:    12
//   float blur_strength;               // Offset:  156 Size:     4 [unused]
//   float blur_size;                   // Offset:  160 Size:     4 [unused]
//   float post_effect_blend;           // Offset:  164 Size:     4 [unused]
//   float2 cbscene_fpad;               // Offset:  168 Size:     8 [unused]
//
// }
//
// cbuffer PARTICLE_CONSTANT_BUFFER
// {
//
//   uint group_count;                  // Offset:    0 Size:     4 [unused]
//   uint noise_gap;                    // Offset:    4 Size:     4
//   uint2 cbparticle_ipad;             // Offset:    8 Size:     8 [unused]
//   float delta_time;                  // Offset:   16 Size:     4
//   float accel_attenuation;           // Offset:   20 Size:     4
//   float2 cbparticle_fpad;            // Offset:   24 Size:     8 [unused]
//
// }
//
// cbuffer PARTICLE_EMITTER_CONSTANT_BUFFER
// {
//
//   uint emit_amounts;                 // Offset:    0 Size:     4
//   uint random_color;                 // Offset:    4 Size:     4
//   uint disable;                      // Offset:    8 Size:     4
//   uint cbparticle_emitter_ipad;      // Offset:   12 Size:     4 [unused]
//   float3 emit_position;              // Offset:   16 Size:    12
//   float emit_speed;                  // Offset:   28 Size:     4
//   float3 emit_force;                 // Offset:   32 Size:    12
//   float emit_accel;                  // Offset:   44 Size:     4
//   float3 emit_direction;             // Offset:   48 Size:    12
//   float spread_rate;                 // Offset:   60 Size:     4
//   float4 emit_color;                 // Offset:   64 Size:    16
//   float emit_size;                   // Offset:   80 Size:     4
//   float life_time;                   // Offset:   84 Size:     4
//   float start_diff;                  // Offset:   88 Size:     4 [unused]
//   float emit_radius;                 // Offset:   92 Size:     4
//
// }
//
// Resource bind info for particle_buffer
// {
//
//   struct Particle
//   {
//       
//       uint particle_index;           // Offset:    0
//       float3 position;               // Offset:    4
//       float size;                    // Offset:   16
//       float4 color;                  // Offset:   20
//       float3 velocity;               // Offset:   36
//       float3 acceleration;           // Offset:   48
//       float3 normal;                 // Offset:   60
//       float life;                    // Offset:   72
//       float start_time;              // Offset:   76
//
//   } $Element;                        // Offset:    0 Size:    80
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// noise_texture                     texture  float4          2d            t41      1 
// particle_buffer                       UAV  struct         r/w             u0      1 
// PARTICLE_CONSTANT_BUFFER          cbuffer      NA          NA            cb4      1 
// PARTICLE_EMITTER_CONSTANT_BUFFER    cbuffer      NA          NA            cb5      1 
// SCENE_CONSTANT_BUFFER             cbuffer      NA          NA            cb9      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Input
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Output
cs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB9[10], immediateIndexed
dcl_constantbuffer CB4[2], immediateIndexed
dcl_constantbuffer CB5[6], immediateIndexed
dcl_resource_texture2d (float,float,float,float) t41
dcl_uav_structured u0, 80
dcl_input vThreadID.x
dcl_temps 11
dcl_thread_group 512, 1, 1
ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r0.xyz, vThreadID.x, l(4), u0.xyzx
ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r1.xyzw, vThreadID.x, l(20), u0.xyzw
ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r2.xyz, vThreadID.x, l(36), u0.xyzx
ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r3.xy, vThreadID.x, l(72), u0.xyxx
ult r0.w, vThreadID.x, cb5[0].x
if_nz r0.w
  iadd r0.w, vThreadID.x, cb4[0].y
  resinfo_indexable(texture2d)(float,float,float,float)_uint r3.zw, l(1), t41.zwxy
  udiv r4.x, r5.x, r0.w, r3.z
  udiv null, r5.y, r4.x, r3.w
  mov r5.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r4.xyz, r5.xyzw, t41.xyzw
  lt r0.w, l(0.000000), r3.y
  if_nz r0.w
    mad r5.xyz, r4.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
    mad r5.xyz, r5.xyzx, cb5[5].wwww, cb5[1].xyzx
    add r0.w, r3.y, -cb4[1].x
    movc r0.w, cb5[0].z, r3.y, r0.w
    movc r6.xyzw, cb5[0].yyyy, r1.xyzw, cb5[4].xyzw
    store_structured u0.xyz, vThreadID.x, l(4), r5.xyzx
    store_structured u0.xyzw, vThreadID.x, l(20), r6.xyzw
    store_structured u0.x, vThreadID.x, l(76), r0.w
    ret 
  endif 
  add r5.xyz, -r0.xyzx, cb9[9].xyzx
  dp3 r0.w, r5.xyzx, r5.xyzx
  rsq r0.w, r0.w
  mul r5.xyz, r0.wwww, r5.xyzx
  lt r0.w, l(0.000000), r3.x
  mov_sat r2.w, r3.x
  lt r3.y, cb5[5].y, l(1.000000)
  lt r4.w, l(0.000000), cb5[5].y
  and r3.y, r3.y, r4.w
  div r4.w, l(1.000000, 1.000000, 1.000000, 1.000000), cb5[5].y
  mul r4.w, r2.w, r4.w
  movc r2.w, r3.y, r4.w, r2.w
  and r0.w, r0.w, r2.w
  mul r6.w, r0.w, cb5[5].x
  add r5.w, r3.x, -cb4[1].x
  udiv r3.x, r7.x, vThreadID.x, r3.z
  udiv null, r7.y, r3.x, r3.w
  mov r7.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r3.xyz, r7.xyzw, t41.xyzw
  mad r3.xyz, r3.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
  dp3 r0.w, r3.xyzx, r3.xyzx
  rsq r0.w, r0.w
  mad r3.xyz, r3.xyzx, r0.wwww, -cb5[3].xyzx
  mad r3.xyz, cb5[3].wwww, r3.xyzx, cb5[3].xyzx
  mul r7.xyz, r3.xyzx, cb5[2].wwww
  mul r8.xyz, r7.xyzx, cb4[1].xxxx
  mad r9.xyz, r7.xyzx, cb4[1].xxxx, cb5[2].xyzx
  mad r2.xyz, r9.xyzx, cb4[1].xxxx, r2.xyzx
  mul r2.xyz, r2.xyzx, cb4[1].yyyy
  mad r6.xyz, r2.xyzx, cb4[1].xxxx, r0.xyzx
  dp3 r0.x, r2.xyzx, r2.xyzx
  sqrt r0.y, r0.x
  lt r0.y, l(10.000000), r0.y
  rsq r0.x, r0.x
  mul r0.xzw, r0.xxxx, r2.xxyz
  mul r9.xyz, r0.xzwx, l(10.000000, 10.000000, 10.000000, 0.000000)
  mov r9.w, l(0)
  mov r10.xy, r2.yzyy
  mov r10.zw, r8.xxxy
  movc r10.xyzw, r0.yyyy, r9.yzww, r10.xyzw
  mov r2.w, r8.z
  movc r0.xy, r0.yyyy, r9.xwxx, r2.xwxx
  lt r2.x, r5.w, l(0.000000)
  if_nz r2.x
    if_z cb5[0].z
      mul r2.xyz, r3.xyzx, cb5[1].wwww
      mad r3.xyz, r4.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
      mad r6.xyz, r3.xyzx, cb5[5].wwww, cb5[1].xyzx
      movc r1.xyz, cb5[0].yyyy, r4.xyzx, cb5[4].xyzx
      mov r1.w, cb5[4].w
      mov r2.w, r7.x
      mov r0.xy, r7.yzyy
      mov r5.w, cb5[5].y
    else 
      mov r2.x, r0.x
      mov r2.yzw, r10.xxyz
      mov r0.x, r10.w
    endif 
  else 
    mov r2.x, r0.x
    mov r2.yzw, r10.xxyz
    mov r0.x, r10.w
  endif 
  store_structured u0.xyzw, vThreadID.x, l(4), r6.xyzw
  store_structured u0.xyzw, vThreadID.x, l(20), r1.xyzw
  store_structured u0.xyzw, vThreadID.x, l(36), r2.xyzw
  mov r0.zw, r5.xxxy
  store_structured u0.xyzw, vThreadID.x, l(52), r0.xyzw
  store_structured u0.xy, vThreadID.x, l(68), r5.zwzz
else 
  store_structured u0.x, vThreadID.x, l(32), l(0)
endif 
ret 
// Approximately 97 instruction slots used
