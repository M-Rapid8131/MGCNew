//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer TRANSITION_CONSTANT_BUFFER
// {
//
//   int using_transition_texture;      // Offset:    0 Size:     4
//      = 0x00000000 
//   int using_transition_back_texture; // Offset:    4 Size:     4 [unused]
//      = 0x00000000 
//   int reverse;                       // Offset:    8 Size:     4
//      = 0x00000000 
//   int cbtransition_ipad;             // Offset:   12 Size:     4 [unused]
//   float transition_prog;             // Offset:   16 Size:     4
//   float transition_smooth;           // Offset:   20 Size:     4
//   float2 cbtransition_fpad;          // Offset:   24 Size:     8 [unused]
//
// }
//
// cbuffer SCENE_CONSTANT_BUFFER
// {
//
//   int blur_lod;                      // Offset:    0 Size:     4
//   int3 cbscene_ipad;                 // Offset:    4 Size:    12 [unused]
//   row_major float4x4 view;           // Offset:   16 Size:    64 [unused]
//   row_major float4x4 projection;     // Offset:   80 Size:    64 [unused]
//   float3 camera_position;            // Offset:  144 Size:    12 [unused]
//   float blur_strength;               // Offset:  156 Size:     4
//   float blur_size;                   // Offset:  160 Size:     4
//   float post_effect_blend;           // Offset:  164 Size:     4
//   float2 cbscene_fpad;               // Offset:  168 Size:     8 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// sampler_states[1]                 sampler      NA          NA             s1      1 
// color_map_2d                      texture  float4          2d             t0      1 
// transition_back_texture           texture  float4          2d            t39      1 
// transition_texture                texture  float4          2d            t40      1 
// TRANSITION_CONSTANT_BUFFER        cbuffer      NA          NA            cb7      1 
// SCENE_CONSTANT_BUFFER             cbuffer      NA          NA            cb9      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// COLOR                    0   xyzw        1     NONE   float       
// TEXCOORD                 0   xy          2     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB7[2], immediateIndexed
dcl_constantbuffer CB9[11], immediateIndexed
dcl_sampler s1, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t39
dcl_resource_texture2d (float,float,float,float) t40
dcl_input_ps linear v2.xy
dcl_output o0.xyzw
dcl_temps 6
sample_indexable(texture2d)(float,float,float,float) r0.xyzw, v2.xyxx, t0.xyzw, s1
add r1.xy, -v2.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
dp2 r1.z, r1.xyxx, r1.xyxx
sqrt r1.w, r1.z
rsq r1.z, r1.z
mul r1.xy, r1.zzzz, r1.xyxx
mul r1.xy, r1.xyxx, l(0.000260, 0.000463, 0.000000, 0.000000)
mul r1.z, r1.w, cb9[9].w
mul r1.xy, r1.zzzz, r1.xyxx
itof r1.z, cb9[0].x
div r1.w, l(2.000000), r1.z
mul r2.xy, r1.wwww, l(0.900000, -0.800000, 0.000000, 0.000000)
mov r3.xyzw, l(0,0,0,0)
mov r1.w, l(0)
loop 
  ige r2.z, r1.w, cb9[0].x
  breakc_nz r2.z
  itof r2.z, r1.w
  div r2.z, r2.z, r1.z
  mul r2.w, r2.z, cb9[10].x
  mad r4.xy, r1.xyxx, r2.wwww, v2.xyxx
  mad r2.z, r2.z, r2.y, r2.x
  sample_indexable(texture2d)(float,float,float,float) r4.xyzw, r4.xyxx, t0.xyzw, s1
  mad r3.xyzw, r4.xyzw, r2.zzzz, r3.xyzw
  iadd r1.w, r1.w, l(1)
endloop 
add r1.xyzw, v2.xyxy, l(-0.500000, -0.500000, -0.500000, -0.500000)
mad r1.xyzw, r1.xyzw, l(1.002000, 1.002000, 0.998000, 0.998000), l(0.500000, 0.500000, 0.500000, 0.500000)
sample_indexable(texture2d)(float,float,float,float) r1.x, r1.xyxx, t0.xyzw, s1
sample_indexable(texture2d)(float,float,float,float) r1.y, r1.zwzz, t0.xyzw, s1
dp3 r1.z, r0.xyzx, l(0.210000, 0.720000, 0.070000, 0.000000)
lt r2.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
mul r4.xyz, r0.xyzx, r1.zzzz
add r4.xyz, r4.xyzx, r4.xyzx
add r5.xyz, r0.xyzx, r1.zzzz
mad r5.xyz, -r0.xyzx, r1.zzzz, r5.xyzx
mad r5.xyz, r5.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
movc r2.xyz, r2.xyzx, r4.xyzx, r5.xyzx
mov r0.xy, r1.xyxx
add r1.xyz, -r2.xyzx, r0.xyzx
mad r0.xyz, r1.xyzx, l(0.750000, 0.750000, 0.750000, 0.000000), r2.xyzx
mad r0.xyzw, r0.xyzw, cb9[10].yyyy, -r3.xyzw
mad r0.xyzw, r0.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000), r3.xyzw
sample_indexable(texture2d)(float,float,float,float) r1.xyzw, v2.xyxx, t39.xyzw, s1
if_nz cb7[0].x
  sample_indexable(texture2d)(float,float,float,float) r2.x, v2.xyxx, t40.xyzw, s1
  add r2.y, r2.x, -cb7[1].y
  add r2.z, -r2.y, r2.x
  add r2.y, -r2.y, cb7[1].x
  div r2.z, l(1.000000, 1.000000, 1.000000, 1.000000), r2.z
  mul_sat r2.y, r2.z, r2.y
  mad r2.z, r2.y, l(-2.000000), l(3.000000)
  mul r2.y, r2.y, r2.y
  mul r2.y, r2.y, r2.z
  add r2.z, -cb7[1].y, cb7[1].x
  add r2.w, -r2.z, cb7[1].x
  add r2.x, -r2.z, r2.x
  div r2.z, l(1.000000, 1.000000, 1.000000, 1.000000), r2.w
  mul_sat r2.x, r2.z, r2.x
  mad r2.z, r2.x, l(-2.000000), l(3.000000)
  mul r2.x, r2.x, r2.x
  mul r2.x, r2.x, r2.z
  movc r2.x, cb7[0].z, r2.y, r2.x
  mul r3.xyzw, r0.xyzw, r2.xxxx
  add r2.x, -r2.x, l(1.000000)
  mul r2.xyzw, r1.xyzw, r2.xxxx
else 
  mul r3.xyzw, r0.xyzw, cb7[1].xxxx
  add r0.x, -cb7[1].x, l(1.000000)
  mul r2.xyzw, r0.xxxx, r1.xyzw
endif 
add o0.xyzw, r2.xyzw, r3.xyzw
ret 
// Approximately 73 instruction slots used
