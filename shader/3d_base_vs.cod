//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer SCENE_CONSTANT_BUFFER
// {
//
//   int blur_lod;                      // Offset:    0 Size:     4 [unused]
//   int3 cbscene_ipad;                 // Offset:    4 Size:    12 [unused]
//   row_major float4x4 view;           // Offset:   16 Size:    64
//   row_major float4x4 projection;     // Offset:   80 Size:    64
//   float3 camera_position;            // Offset:  144 Size:    12 [unused]
//   float blur_strength;               // Offset:  156 Size:     4 [unused]
//   float blur_size;                   // Offset:  160 Size:     4 [unused]
//   float post_effect_blend;           // Offset:  164 Size:     4 [unused]
//   float2 cbscene_fpad;               // Offset:  168 Size:     8 [unused]
//
// }
//
// cbuffer PRIMITIVE_CONSTANT_BUFFER
// {
//
//   row_major float4x4 world;          // Offset:    0 Size:    64
//   int has_tangent;                   // Offset:   64 Size:     4 [unused]
//   int material;                      // Offset:   68 Size:     4 [unused]
//   int skin;                          // Offset:   72 Size:     4
//   int cbprimitive_ipad;              // Offset:   76 Size:     4 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// PRIMITIVE_CONSTANT_BUFFER         cbuffer      NA          NA            cb0      1 
// SCENE_CONSTANT_BUFFER             cbuffer      NA          NA            cb9      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyz 
// NORMAL                   0   xyzw        1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xy          3     NONE   float   xy  
// JOINTS                   0   xyzw        4     NONE    uint       
// WEIGHTS                  0   xyzw        5     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// POSITION                 0   xyzw        1     NONE   float   xyzw
// NORMAL                   0   xyzw        2     NONE   float   xyzw
// TANGENT                  0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 0   xy          4     NONE   float   xy  
// TEXCOORD                 1   xyz         5     NONE   float   xyz 
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB9[9], immediateIndexed
dcl_constantbuffer CB0[5], immediateIndexed
dcl_input v0.xyz
dcl_input v1.xyz
dcl_input v2.xyzw
dcl_input v3.xy
dcl_output_siv o0.xyzw, position
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_output o3.xyzw
dcl_output o4.xy
dcl_output o5.xyz
dcl_temps 9
ilt r0.x, l(-1), cb0[4].z
if_nz r0.x
  dp3 r0.x, v1.xyzx, v1.xyzx
  rsq r0.x, r0.x
  mul r0.xyz, r0.xxxx, v1.xyzx
  dp3 r0.w, v2.xyzx, v2.xyzx
  rsq r0.w, r0.w
  mul r1.xyz, r0.wwww, v2.xyzx
else 
  mov r0.xyz, v1.xyzx
  mov r1.xyz, v2.xyzx
endif 
mul r2.xyzw, cb9[1].yyyy, cb9[6].xyzw
mad r2.xyzw, cb9[1].xxxx, cb9[5].xyzw, r2.xyzw
mad r2.xyzw, cb9[1].zzzz, cb9[7].xyzw, r2.xyzw
mad r2.xyzw, cb9[1].wwww, cb9[8].xyzw, r2.xyzw
mul r3.xyzw, cb9[2].yyyy, cb9[6].xyzw
mad r3.xyzw, cb9[2].xxxx, cb9[5].xyzw, r3.xyzw
mad r3.xyzw, cb9[2].zzzz, cb9[7].xyzw, r3.xyzw
mad r3.xyzw, cb9[2].wwww, cb9[8].xyzw, r3.xyzw
mul r4.xyzw, cb9[3].yyyy, cb9[6].xyzw
mad r4.xyzw, cb9[3].xxxx, cb9[5].xyzw, r4.xyzw
mad r4.xyzw, cb9[3].zzzz, cb9[7].xyzw, r4.xyzw
mad r4.xyzw, cb9[3].wwww, cb9[8].xyzw, r4.xyzw
mul r5.xyzw, cb9[4].yyyy, cb9[6].xyzw
mad r5.xyzw, cb9[4].xxxx, cb9[5].xyzw, r5.xyzw
mad r5.xyzw, cb9[4].zzzz, cb9[7].xyzw, r5.xyzw
mad r5.xyzw, cb9[4].wwww, cb9[8].xyzw, r5.xyzw
mul r6.xyzw, r3.xyzw, cb0[0].yyyy
mad r6.xyzw, cb0[0].xxxx, r2.xyzw, r6.xyzw
mad r6.xyzw, cb0[0].zzzz, r4.xyzw, r6.xyzw
mad r6.xyzw, cb0[0].wwww, r5.xyzw, r6.xyzw
mul r7.xyzw, r3.xyzw, cb0[1].yyyy
mad r7.xyzw, cb0[1].xxxx, r2.xyzw, r7.xyzw
mad r7.xyzw, cb0[1].zzzz, r4.xyzw, r7.xyzw
mad r7.xyzw, cb0[1].wwww, r5.xyzw, r7.xyzw
mul r8.xyzw, r3.xyzw, cb0[2].yyyy
mad r8.xyzw, cb0[2].xxxx, r2.xyzw, r8.xyzw
mad r8.xyzw, cb0[2].zzzz, r4.xyzw, r8.xyzw
mad r8.xyzw, cb0[2].wwww, r5.xyzw, r8.xyzw
mul r3.xyzw, r3.xyzw, cb0[3].yyyy
mad r2.xyzw, cb0[3].xxxx, r2.xyzw, r3.xyzw
mad r2.xyzw, cb0[3].zzzz, r4.xyzw, r2.xyzw
mad r2.xyzw, cb0[3].wwww, r5.xyzw, r2.xyzw
mul r3.xyzw, r7.xyzw, v0.yyyy
mad r3.xyzw, v0.xxxx, r6.xyzw, r3.xyzw
mad r3.xyzw, v0.zzzz, r8.xyzw, r3.xyzw
add r2.xyzw, r2.xyzw, r3.xyzw
mul r3.xyzw, v0.yyyy, cb0[1].xyzw
mad r3.xyzw, v0.xxxx, cb0[0].xyzw, r3.xyzw
mad r3.xyzw, v0.zzzz, cb0[2].xyzw, r3.xyzw
add o1.xyzw, r3.xyzw, cb0[3].xyzw
mul r3.xyzw, r0.yyyy, cb0[1].xyzw
mad r3.xyzw, r0.xxxx, cb0[0].xyzw, r3.xyzw
mad r0.xyzw, r0.zzzz, cb0[2].xyzw, r3.xyzw
dp4 r1.w, r0.xyzw, r0.xyzw
rsq r1.w, r1.w
mul o2.xyzw, r0.xyzw, r1.wwww
mul r0.xyzw, r1.yyyy, cb0[1].xyzw
mad r0.xyzw, r1.xxxx, cb0[0].xyzw, r0.xyzw
mad r0.xyzw, r1.zzzz, cb0[2].xyzw, r0.xyzw
dp4 r0.w, r0.xyzw, r0.xyzw
rsq r0.w, r0.w
mul o3.xyz, r0.wwww, r0.xyzx
div r0.xyz, r2.xyzx, r2.wwww
mov o0.xyzw, r2.xyzw
mov o3.w, v2.w
mad o5.xyz, r0.xyzx, l(0.500000, -0.500000, 1.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
mov o4.xy, v3.xyxx
ret 
// Approximately 70 instruction slots used
