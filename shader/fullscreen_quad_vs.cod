//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_VERTEXID              0   x           0   VERTID    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// COLOR                    0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 0   xy          2     NONE   float   xy  
//
vs_5_0
dcl_globalFlags refactoringAllowed | skipOptimization
dcl_input_sgv v0.x, vertex_id
dcl_output_siv o0.xyzw, position
dcl_output o1.xyzw
dcl_output o2.xy
dcl_temps 3
dcl_indexableTemp x0[4], 4
dcl_indexableTemp x1[4], 4
//
// Initial variable locations:
//   v0.x <- vertexid; 
//   o2.x <- <ShaderMain return value>.texcoord.x; o2.y <- <ShaderMain return value>.texcoord.y; 
//   o1.x <- <ShaderMain return value>.color.x; o1.y <- <ShaderMain return value>.color.y; o1.z <- <ShaderMain return value>.color.z; o1.w <- <ShaderMain return value>.color.w; 
//   o0.x <- <ShaderMain return value>.position.x; o0.y <- <ShaderMain return value>.position.y; o0.z <- <ShaderMain return value>.position.z; o0.w <- <ShaderMain return value>.position.w; 
//   x0 <- position; x1 <- texcoords
//
#line 7 "C:\General\GR4GA_NISHIOKA\MAGIC COLOR STONE\MGCNew\LightBlueEngine\HLSL\2D\fullscreen_quad_vs.hlsl"
itof r0.xyzw, l(0, 0, 0, 0)  // r0.x <- vout.color.x; r0.y <- vout.color.y; r0.z <- vout.color.z; r0.w <- vout.color.w

#line 9
itof r1.xy, l(-1, 1, 0, 0)
itof r1.zw, l(0, 0, 1, 1)
itof r2.xyzw, l(-1, -1, 1, -1)
mov x0[0].xy, r1.xyxx
mov x0[1].xy, r1.zwzz
mov x0[2].xy, r2.xyxx
mov x0[3].xy, r2.zwzz

#line 16
itof r1.xy, l(0, 0, 0, 0)
itof r1.zw, l(0, 0, 1, 0)
itof r2.xyzw, l(0, 1, 1, 1)
mov x1[0].xy, r1.xyxx
mov x1[1].xy, r1.zwzz
mov x1[2].xy, r2.xyxx
mov x1[3].xy, r2.zwzz

#line 24
mov r1.x, v0.x
mov r2.xy, x0[r1.x + 0].xyxx  // r2.x <- vout.position.x; r2.y <- vout.position.y
itof r2.zw, l(0, 0, 0, 1)  // r2.z <- vout.position.z; r2.w <- vout.position.w

#line 25
mov r1.xy, x1[r1.x + 0].xyxx  // r1.x <- vout.texcoord.x; r1.y <- vout.texcoord.y

#line 26
mov o0.xyzw, r2.xyzw
mov o1.xyzw, r0.xyzw
mov o2.xy, r1.xyxx
ret 
// Approximately 23 instruction slots used
