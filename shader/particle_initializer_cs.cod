//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer PARTICLE_CONSTANT_BUFFER
// {
//
//   uint group_count;                  // Offset:    0 Size:     4 [unused]
//   uint noise_gap;                    // Offset:    4 Size:     4
//   uint2 cbparticle_ipad;             // Offset:    8 Size:     8 [unused]
//   float delta_time;                  // Offset:   16 Size:     4 [unused]
//   float accel_attenuation;           // Offset:   20 Size:     4 [unused]
//   float2 cbparticle_fpad;            // Offset:   24 Size:     8 [unused]
//
// }
//
// cbuffer PARTICLE_EMITTER_CONSTANT_BUFFER
// {
//
//   uint emit_amounts;                 // Offset:    0 Size:     4 [unused]
//   uint random_color;                 // Offset:    4 Size:     4
//   uint disable;                      // Offset:    8 Size:     4 [unused]
//   uint cbparticle_emitter_ipad;      // Offset:   12 Size:     4 [unused]
//   float3 emit_position;              // Offset:   16 Size:    12
//   float emit_speed;                  // Offset:   28 Size:     4
//   float3 emit_force;                 // Offset:   32 Size:    12 [unused]
//   float emit_accel;                  // Offset:   44 Size:     4
//   float3 emit_direction;             // Offset:   48 Size:    12
//   float spread_rate;                 // Offset:   60 Size:     4
//   float4 emit_color;                 // Offset:   64 Size:    16
//   float emit_size;                   // Offset:   80 Size:     4
//   float life_time;                   // Offset:   84 Size:     4
//   float start_diff;                  // Offset:   88 Size:     4
//   float emit_radius;                 // Offset:   92 Size:     4
//
// }
//
// Resource bind info for particle_buffer
// {
//
//   struct Particle
//   {
//       
//       uint particle_index;           // Offset:    0
//       float3 position;               // Offset:    4
//       float size;                    // Offset:   16
//       float4 color;                  // Offset:   20
//       float3 velocity;               // Offset:   36
//       float3 acceleration;           // Offset:   48
//       float3 normal;                 // Offset:   60
//       float life;                    // Offset:   72
//       float start_time;              // Offset:   76
//
//   } $Element;                        // Offset:    0 Size:    80
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// noise_texture                     texture  float4          2d            t41      1 
// particle_buffer                       UAV  struct         r/w             u0      1 
// PARTICLE_CONSTANT_BUFFER          cbuffer      NA          NA            cb4      1 
// PARTICLE_EMITTER_CONSTANT_BUFFER    cbuffer      NA          NA            cb5      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Input
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Output
cs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB4[1], immediateIndexed
dcl_constantbuffer CB5[6], immediateIndexed
dcl_resource_texture2d (float,float,float,float) t41
dcl_uav_structured u0, 80
dcl_input vThreadID.x
dcl_temps 4
dcl_thread_group 512, 1, 1
mov r0.x, vThreadID.x
mov r1.zw, l(0,0,0,0)
resinfo_indexable(texture2d)(float,float,float,float)_uint r2.xy, l(1), t41.xyzw
udiv r3.x, r1.x, vThreadID.x, r2.x
udiv null, r1.y, r3.x, r2.y
ld_indexable(texture2d)(float,float,float,float) r1.xyz, r1.xyzw, t41.xyzw
mad r1.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
mad r0.yzw, cb5[5].wwww, r1.xxyz, cb5[1].xxyz
store_structured u0.xyzw, vThreadID.x, l(0), r0.xyzw
iadd r0.x, vThreadID.x, cb4[0].y
udiv r0.x, r3.x, r0.x, r2.x
udiv null, r3.y, r0.x, r2.y
mov r3.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r0.xyz, r3.xyzw, t41.xyzw
mov r0.w, cb5[4].w
movc r0.xyzw, cb5[0].yyyy, r0.wxyz, cb5[4].wxyz
mov r2.yzw, r0.yyzw
mov r2.x, cb5[5].x
store_structured u0.xyzw, vThreadID.x, l(16), r2.xyzw
dp3 r1.w, r1.xyzx, r1.xyzx
rsq r1.w, r1.w
mad r1.xyz, r1.xyzx, r1.wwww, -cb5[3].xyzx
mad r1.xyz, cb5[3].wwww, r1.xyzx, cb5[3].xyzx
mul r0.yzw, r1.xxyz, cb5[1].wwww
mul r1.xyz, r1.xyzx, cb5[2].wwww
store_structured u0.xyzw, vThreadID.x, l(32), r0.xyzw
mov r1.w, l(0)
store_structured u0.xyzw, vThreadID.x, l(48), r1.xyzw
iadd r0.x, vThreadID.x, l(1)
utof r0.x, r0.x
mul r0.w, r0.x, cb5[5].z
mov r0.xy, l(1.000000,0,0,0)
mov r0.z, cb5[5].y
store_structured u0.xyzw, vThreadID.x, l(64), r0.xyzw
ret 
// Approximately 35 instruction slots used
